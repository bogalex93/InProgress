{"version":3,"sources":["webpack:///app/$_lazy_route_resource lazy namespace object","webpack:///app/global/environment.ts","webpack:///app/main-routing.module.ts","webpack:///app/main.module.ts","webpack:///app/main.ts","webpack:///app/root/root.component.ts","webpack:///app/root/root.component.html","webpack:///crossover/crossover-ipc.renderer.ts","webpack:///crossover/crossover.channels.ts","webpack:///crossover/crossover.framework.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","environment","production","routes","MainRoutingModule","forRoot","imports","MainModule","declarations","providers","bootstrap","screenMeta","takeScreenShot","maxDimension","Math","max","width","height","thumbSize","window","devicePixelRatio","options","types","thumbnailSize","electron","desktopCapturer","getSources","sources","image","thumbnail","toDataURL","document","body","style","background","subscribe","m","bootstrapModule","err","console","error","RootComponent","title","selector","templateUrl","styleUrls","require","Crossover","channel","model","eventName","constructor","name","ipcRenderer","send","listener","on","removeListener","invoke","result","CrossoverChannel","InitializationChannel","crossoverChannel","target","channelName","withType","mt","typeDef","modelType","crossOverChannel","modelTypeName"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./app/$$_lazy_route_resource lazy recursive\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class MainRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MainRoutingModule } from './main-routing.module';\nimport { RootComponent } from './root/root.component';\n\n@NgModule({\n  declarations: [\n    RootComponent\n  ],\n  imports: [\n    BrowserModule,\n    MainRoutingModule\n  ],\n  providers: [],\n  bootstrap: [RootComponent]\n})\n\nexport class MainModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { MainModule } from './main.module';\nimport { environment } from './global/environment';\nimport { Crossover } from 'crossover/crossover-ipc.renderer';\nimport { InitializationChannel } from 'crossover/crossover.channels';\nimport { ScreenMeta } from 'crossover/crossover.models';\n\nlet screenMeta : ScreenMeta;\n\nif (environment.production) {\n  enableProdMode();\n}\n\nasync function takeScreenShot() {  \n  const maxDimension = Math.max(screenMeta.width, screenMeta.height);\n  const thumbSize = { width: maxDimension * window.devicePixelRatio, height: maxDimension * window.devicePixelRatio };\n  let options = { types: ['screen'], thumbnailSize: thumbSize };\n  var sources = await Crossover.electron.desktopCapturer.getSources(options);\n  var image = sources[0].thumbnail.toDataURL();\n  document.body.style.background = `url(\"${image}\") top right no-repeat`;\n}\n\nCrossover.subscribe(InitializationChannel, (e, m: ScreenMeta) => { screenMeta = m; takeScreenShot()});\n//window.onblur = e=> document.body.style.background =  \"transparent\"; \nplatformBrowserDynamic().bootstrapModule(MainModule).catch(err => console.error(err));\n","import { Component, AfterViewInit } from '@angular/core';\nimport { ScreenMeta } from 'crossover/crossover.models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.scss'],\n})\nexport class RootComponent implements AfterViewInit {\n\n  title = \"it works\";\n  screenMeta: ScreenMeta;\n\n  constructor() {    \n   \n  }\n  \n  async ngAfterViewInit(): Promise<void> {      \n   \n  }\n\n\n}\n","<div class=\"container\">\r\n    <div class=\"note\">\r\n        <div class=\"title-container\">\r\n            <h2 class=\"title\">Note title</h2>\r\n            <span class=\"date\">18/03/2020</span>\r\n        </div>\r\n        <div class=\"body\">\r\n            description\r\n        </div>\r\n    </div>\r\n    <div class=\"note\">\r\n        <div class=\"title-container\">\r\n            <h3 class=\"title\">Note title</h3>\r\n            <span class=\"date\">18/03/2020</span>\r\n        </div>\r\n        <div class=\"body\">\r\n            description\r\n        </div>\r\n    </div>\r\n    <div class=\"note success\">\r\n        <div class=\"title-container\">\r\n            <h2 class=\"title\">Note title</h2>\r\n            <span class=\"date\">18/03/2020</span>\r\n        </div>\r\n        <div class=\"body\">\r\n            description\r\n        </div>\r\n    </div>\r\n</div>","import { CrossoverModel } from './crossover.models';\r\nimport { CrossoverChannel } from './crossover.channels';\r\nimport { IpcRendererEvent } from 'electron';\r\n\r\nconst electron: Electron.RendererInterface = window.require('electron');\r\n\r\nexport class Crossover {\r\n\r\n    public static electron : Electron.RendererInterface = electron;\r\n\r\n    public static send<TChannel extends CrossoverChannel>(channel: (new () => TChannel) | TChannel, model: CrossoverModel) {\r\n        let eventName = channel instanceof CrossoverChannel? channel.eventName : new channel().constructor.name;        \r\n        electron.ipcRenderer.send(eventName, model);\r\n    }\r\n\r\n    public static subscribe<TChannel extends CrossoverChannel>(channel: (new () => TChannel) | TChannel, listener: (event: IpcRendererEvent, model: CrossoverModel) => void) {        \r\n        let eventName = channel instanceof CrossoverChannel? channel.eventName : new channel().constructor.name;  \r\n        electron.ipcRenderer.on(eventName, listener);\r\n    }\r\n\r\n    public static unsubscribe<TChannel extends CrossoverChannel>(channel: (new () => TChannel) | TChannel, listener: (...args: any[]) => void) {\r\n        let eventName = channel instanceof CrossoverChannel? channel.eventName : new channel().constructor.name;  \r\n        electron.ipcRenderer.removeListener(eventName, listener);\r\n    }\r\n\r\n    public static async get<TChannel extends CrossoverChannel, TModel extends CrossoverModel>(channel: (new () => TChannel) | TChannel, model?: CrossoverModel): Promise<TModel> {        \r\n        let eventName = channel instanceof CrossoverChannel? channel.eventName : new channel().constructor.name;  \r\n        var result = await electron.ipcRenderer.invoke(eventName, model);\r\n        return result;\r\n    }\r\n}\r\n","import { crossoverChannel } from './crossover.framework';\r\n\r\nexport abstract class CrossoverChannel {\r\n    public static withType: (modelType: new () => any) => CrossoverChannel;\r\n    public static channelName: string;\r\n    \r\n    public channelName: string;\r\n    public eventName: string;\r\n}\r\n\r\n@crossoverChannel\r\nexport class InitializationChannel extends CrossoverChannel {\r\n}\r\n\r\n\r\n","export function crossoverChannel(target: any) {\r\n    target.channelName = target.name;    \r\n    target.withType = mt => withType(target, mt);    \r\n}\r\n\r\nfunction withType(typeDef: any, modelType: new () => any) {\r\n    var crossOverChannel = new typeDef();\r\n    crossOverChannel.channelName = typeDef.name;    \r\n    let modelTypeName = new modelType().constructor.name;\r\n    crossOverChannel.eventName = `${crossOverChannel.channelName}-${modelTypeName}`;\r\n    return crossOverChannel;\r\n}"]}