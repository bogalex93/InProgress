{"version":3,"sources":["webpack:///app/main.ts","webpack:///app/shared/components/confirmation-overlay/confirmation-overlay.component.ts","webpack:///app/shared/components/confirmation-overlay/confirmation-overlay.component.html","webpack:///app/$_lazy_route_resource lazy namespace object","webpack:///app/global/environment.ts","webpack:///crossover/crossover.channels.ts","webpack:///app/root/root.component.html","webpack:///app/root/root.component.ts","webpack:///app/shared/types/uikit.types.ts","webpack:///crossover/crossover.models.ts","webpack:///app/shared/directives/directives.ts","webpack:///app/main-routing.module.ts","webpack:///crossover/crossover-framework.ts","webpack:///app/shared/custom-decorators.ts","webpack:///app/main.module.ts","webpack:///app/root/note-actions.ts","webpack:///crossover/crossover-ipc.renderer.ts","webpack:///app/models/models.ts"],"names":["production","takeScreenShot","displayInfo","maxDimension","Math","max","width","height","thumbSize","window","devicePixelRatio","options","types","thumbnailSize","electron","desktopCapturer","getSources","sources","image","thumbnail","toDataURL","document","body","style","background","bootstrapModule","err","console","error","ConfirmationOverlayComponent","cancelAction","confirmAction","selector","templateUrl","styleUrls","confirmQuestion","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","environment","ConfigurationChannel","InitializationChannel","DataChannel","lodash","uikit","UIkit","RootComponent","elementRef","newNote","appConfig","minimized","noteStates","isElectronRunning","electronWindow","remote","getCurrentWindow","getBounds","log","get","display","storeName","action","folders","name","notes","isDefault","selectedFolder","selectFolder","util","on","addNotesModal","$el","show","modalVisible","hidden","creteFolderModal","right","setProperty","folder","forEach","f","selected","saveToDisk","input","push","value","length","hide","toggleView","lines","date","Date","now","send","data","note","filter","l","content","state","canceled","completed","important","neutral","noteEl","allStates","actions","setBounds","x","y","centerY","notesCount","completedNotes","n","inProgressNotes","inProgress","createNote","changeWindowSize","saveNote","saveFolder","modal","ModalEvents","DisplayInfo","AppConfig","GenericData","ConfirmDeleteDirective","elRef","componentFactoryResolver","viewContainerRef","onConfirm","onCancel","nativeElement","confirmDelete","parentElement","position","componentFactory","resolveComponentFactory","componentRef","createComponent","instance","handleAction","confirmationOverlay","confirmationElement","location","left","offsetLeft","top","offsetTop","clientWidth","clientHeight","confirm","remove","observers","emit","NgInitDirective","initEvent","routes","MainRoutingModule","forRoot","imports","crossoverModel","typeDef","internal_type_name","crossoverChannel","channelName","mt","withType","modelTypeDef","crossOverChannel","eventName","CrossoverChannel","CrossoverModel","UIkitComponent","uikitConstructor","target","key","newVal","Object","defineProperty","set","MainModule","declarations","providers","bootstrap","NoteActions","onAction","line","require","undefined","electronNotPrezent","Crossover","channel","model","ipcRenderer","listener","removeListener","invoke","result","Folder","Note","NoteStates"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { MainModule } from './main.module';\nimport { environment } from './global/environment';\nimport { Crossover } from 'crossover/crossover-ipc.renderer';\nimport { InitializationChannel } from 'crossover/crossover.channels';\nimport { DisplayInfo } from 'crossover/crossover.models';\nimport { SourcesOptions, DesktopCapturerSource } from 'electron';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nasync function takeScreenShot(displayInfo: DisplayInfo) {\n  const maxDimension = Math.max(displayInfo.width, displayInfo.height);\n  const thumbSize = { width: maxDimension * window.devicePixelRatio, height: maxDimension * window.devicePixelRatio };\n  let options: SourcesOptions = { types: ['screen'], thumbnailSize: thumbSize };\n  var sources: DesktopCapturerSource[] = await Crossover.electron.desktopCapturer.getSources(options);\n  var image = sources[0].thumbnail.toDataURL();\n  document.body.style.background = `url(\"${image}\") top right no-repeat`;\n}\n\n//Crossover.subscribe(InitializationChannel.with(ScreenMeta), (e, m: ScreenMeta) => takeScreenShot(m));\n\nplatformBrowserDynamic().bootstrapModule(MainModule).catch(err => console.error(err));\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-confirmation-overlay',\n  templateUrl: './confirmation-overlay.component.html',\n  styleUrls: ['./confirmation-overlay.component.scss']\n})\nexport class ConfirmationOverlayComponent implements OnInit {\n\n  @Input() confirmQuestion: string;\n  @Input() confirmAction: () => void;\n  @Input() cancelAction: () => void;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3 class=\"confirm-question\" *ngIf=\"confirmQuestion\" [innerText]=\"confirmQuestion\"></h3>\n<div class=\"confirm-actions\">\n  <span uk-icon=\"icon: close; ratio: 2.5\" (click)=\"cancelAction()\" class=\"icon-btn delete\"></span>\n  <span uk-icon=\"icon: check; ratio: 2.5\" (click)=\"confirmAction()\" class=\"icon-btn done\"></span>\n</div>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"9tog\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { crossoverChannel, CrossoverChannel } from './crossover-framework';\r\n\r\n@crossoverChannel\r\nexport class ConfigurationChannel extends CrossoverChannel {\r\n}\r\n\r\n@crossoverChannel\r\nexport class InitializationChannel extends CrossoverChannel {\r\n}\r\n\r\n\r\n@crossoverChannel\r\nexport class DataChannel extends CrossoverChannel {\r\n}\r\n\r\n\r\n\r\n","<div class=\"home-root\">\r\n  <div id=\"content-container\" class=\"content-container\" *ngIf=\"selectedFolder\"\r\n    [ngClass]=\"{'blur': modalVisible,'minimized': appConfig.minimized}\">\r\n    <h2 class=\"folder-title\">\r\n      <div style=\"display: flex;\"><span uk-icon=\"icon: folder; ratio: 1.6\"></span> <span style=\"margin-left: 4px\"\r\n          [innerText]=\"selectedFolder.name\"></span></div>\r\n      <div style=\"font-size: 11px; display: flex; flex-direction: column; line-height: 12px;\">\r\n        <div>\r\n          <span [innerText]=\"folderStats.notesCount\"></span>\r\n          <span style=\"margin-left: 4px;\">notes</span>\r\n        </div>\r\n        <div style=\"color: #2ca8ff;\">\r\n          <span [innerText]=\"folderStats.inProgressNotes\"></span>\r\n          <span style=\"margin-left: 4px;\">in progress</span>\r\n        </div>\r\n        <div style=\"color: limegreen;\">\r\n          <span [innerText]=\"folderStats.completedNotes\"></span>\r\n          <span style=\"margin-left: 4px;\">completed</span>\r\n        </div>\r\n      </div>\r\n    </h2>\r\n    <div class=\"notes-list\">\r\n      <ng-container *ngFor=\"let note of selectedFolder.notes\">\r\n        <div class=\"note uk-animation-scale-up\" confirm-delete #noteEl (ngInit)=\"initNote(noteEl, note)\"\r\n          (onConfirm)=\"removeNote(note)\" [ngClass]=\"note.state\">\r\n          <div class=\"title-container\">\r\n            <span class=\"meta\">\r\n              <span class=\"important\" *ngIf=\"note.state == noteStates.important\"\r\n                uk-icon=\"icon: warning; ratio: 1.3\"></span>\r\n              <span class=\"done\" *ngIf=\"note.state == noteStates.completed\" uk-icon=\"icon: check; ratio: 1.3\"></span>\r\n            </span>\r\n            <h3 class=\"title\">\r\n              <span uk-icon=\"icon: comment; ratio: 1.2\"></span>\r\n              <span style=\"margin-left: 10px;\" [innerText]=\"note.title\"></span>\r\n            </h3>\r\n          </div>\r\n          <div class=\"body\">\r\n            <div class=\"line\" *ngFor=\"let line of note.lines\" [ngClass]=\"line.state\">\r\n              <!-- <textarea style=\"min-height: 120px;\" [(ngModel)]=\"newNote.content\" placeholder=\"content\"\r\n                              class=\"uk-textarea\"></textarea> -->\r\n              <span uk-icon=\"icon: minus; ratio: 1\" class=\"bulet\"></span>\r\n              <input type=\"text\" [(ngModel)]=\"line.content\"\r\n                [disabled]=\"line.state == noteStates.completed || line.state == noteStates.canceled\" class=\"uk-input\"\r\n                placeholder=\"new line\" />\r\n\r\n              <span uk-icon=\"icon: trash; ratio: 1\" class=\"icon-btn delete\" uk-tooltip=\"delete line\"\r\n                (click)=\"note.lines = lodash.without(note.lines, line)\"></span>\r\n              <span *ngIf=\"line.content\" uk-icon=\"icon: check; ratio: 1.1\" class=\"icon-btn done\" uk-tooltip=\"complete\"\r\n                (click)=\"noteEl.actions.completeLine(line)\"></span>\r\n              <span *ngIf=\"line.content\" uk-icon=\"icon: pull; ratio: 1.1\" class=\"icon-btn default\"\r\n                uk-tooltip=\"in progress\" (click)=\"noteEl.actions.inProgressLine(line)\"></span>\r\n              <span *ngIf=\"line.content\" uk-icon=\"icon: ban; ratio: 1.1\" class=\"icon-btn default\" uk-tooltip=\"cancel\"\r\n                (click)=\"noteEl.actions.cancelLine(line)\" style=\"margin-right: 4px;\"></span>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"actions\">\r\n            <span uk-icon=\"icon: plus; ratio: 1.1\" uk-tooltip=\"add new line\" class=\"icon-btn\"\r\n              (click)=\"noteEl.actions.createNewLine()\"></span>\r\n            <span uk-icon=\"icon: check; ratio: 1.1\" uk-tooltip=\"mark as completed\" (click)=\"completeNote(note)\"\r\n              class=\"icon-btn done\" [ngClass]=\"{'disabled': note.state == noteStates.completed}\"></span>\r\n            <span uk-icon=\"icon: calendar; ratio: 1.1\" uk-tooltip=\"set deadline\" class=\"icon-btn\"\r\n              [ngClass]=\"{'disabled': note.state == noteStates.completed}\"></span>\r\n            <span uk-icon=\"icon: warning; ratio: 1.1\" uk-tooltip=\"mark as important\"\r\n              (click)=\"markNote(note)\" class=\"icon-btn\"\r\n              [ngClass]=\"{'disabled':note.state == noteStates.completed}\"></span>\r\n            <span uk-icon=\"icon: trash; ratio: 1.1\" class=\"icon-btn delete\" uk-tooltip=\"delete note\"\r\n              (click)=\"noteEl.confirmDelete()\"></span>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <div class=\"menu-container\" [ngClass]=\"{'minimized': appConfig.minimized}\">\r\n    <div class=\"menu\">\r\n      <div class=\"uk-inline\">\r\n        <button class=\"btn-new-note\" (click)=\"toggleView()\">\r\n          <span *ngIf=\"appConfig.minimized\" uk-tooltip=\"expand\" uk-icon=\"icon: expand; ratio: 2\"></span>\r\n          <span *ngIf=\"!appConfig.minimized\" uk-tooltip=\"collapse\" uk-icon=\"icon: shrink; ratio: 2\"></span>\r\n        </button>\r\n      </div>\r\n      <div class=\"uk-inline\">\r\n        <button class=\"btn-new-note\" (click)=\"createNote()\" uk-tooltip=\"new note\">\r\n          <span uk-icon=\"icon: plus; ratio: 2\"></span>\r\n        </button>\r\n      </div>\r\n      <div class=\"uk-inline\">\r\n        <button [disabled]=\"appConfig.minimized\" uk-tooltip=\"folders\">\r\n          <span uk-icon=\"icon: folder; ratio: 2\"></span>\r\n        </button>\r\n        <div uk-dropdown=\"pos: left\">\r\n          <ul class=\"uk-nav uk-dropdown-nav\">\r\n            <li><a (click)=\"creteFolderModal.show()\"><span uk-icon=\"icon: plus; ratio: 1\"></span> New\r\n                Folder</a></li>\r\n            <li *ngFor=\"let folder of folders\">\r\n              <a [ngClass]=\"{'active': folder.selected}\">\r\n                <span (click)=\"selectFolder(folder)\">\r\n                  <span uk-icon=\"icon: folder; ratio: 1\"></span> <span style=\"margin-left: 4px\"\r\n                    [innerText]=\"folder.name\"></span>\r\n                </span>\r\n                <span *ngIf=\"folder.selected\" style=\"float: right;\" uk-icon=\"icon: check; ratio: 1\"></span>\r\n                <span *ngIf=\"!folder.isDefault && !folder.selected\" class=\"icon-btn delete\" style=\"float: right;\"\r\n                  uk-icon=\"icon: trash; ratio: 1\"></span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"uk-inline\">\r\n        <button [disabled]=\"appConfig.minimized\">\r\n          <span uk-icon=\"icon: settings; ratio: 2\"></span>\r\n        </button>\r\n        <div uk-dropdown=\"pos: left\">\r\n          <ul class=\"uk-nav uk-dropdown-nav\">\r\n            <li><a><span class=\"icon-btn\" uk-icon=\"icon: plus; ratio: 1\" (click)=\"changeWindowSize(20)\"></span> Width:\r\n                {{ this.appConfig.width }}px <span class=\"icon-btn delete\" uk-icon=\"icon: minus; ratio: 1\"\r\n                  (click)=\"changeWindowSize(-20)\"></span></a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"add-note-modal\" class=\"uk-flex-top\" #addNoteModalRef>\r\n    <div class=\"uk-modal-dialog uk-margin-auto-vertical uk-animation-scale-up\">\r\n      <div class=\"add-note\">\r\n        <div class=\"uk-modal-header\">\r\n          <h2 class=\"title\" style=\"margin: 10px 0 0 0;\"><span uk-icon=\"icon: comment; ratio: 1.4\"></span>\r\n            <input type=\"text\" style=\"font-size: 20px;\" [(ngModel)]=\"newNote.title\" class=\"uk-input\"\r\n              placeholder=\"title\" />\r\n          </h2>\r\n        </div>\r\n        <div class=\"uk-modal-body\">\r\n          <div class=\"line\" *ngFor=\"let line of newNote.lines\">\r\n            <!-- <textarea style=\"min-height: 120px;\" [(ngModel)]=\"newNote.content\" placeholder=\"content\"\r\n                      class=\"uk-textarea\"></textarea> -->\r\n            <span uk-icon=\"icon: pencil; ratio: 1.4\"></span>\r\n            <input type=\"text\" [(ngModel)]=\"line.content\" class=\"uk-input\" placeholder=\"new line\" />\r\n            <span uk-icon=\"icon: trash; ratio: 1.2\" class=\"icon-btn delete\"\r\n              (click)=\"newNote.lines = lodash.without(newNote.lines, line)\"></span>\r\n          </div>\r\n          <p><span uk-icon=\"icon: plus; ratio: 1.2\" class=\"icon-btn\" (click)=\"newNote.lines.push({})\"></span>\r\n          </p>\r\n        </div>\r\n        <div class=\"uk-modal-footer uk-text-right\">\r\n          <button class=\"uk-button uk-button-danger uk-modal-close  uk-button-small\" type=\"button\">Cancel</button>\r\n          <button class=\"uk-button uk-button-primary uk-button-small\" [disabled]=\"!newNote.title\"\r\n            (click)=\"saveNote()\">Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"create-folder-modal\" class=\"uk-flex-top\" #createFolderModalRef>\r\n    <div class=\"uk-modal-dialog uk-margin-auto-vertical uk-animation-scale-up\">\r\n      <div class=\"add-note\">\r\n        <div class=\"uk-modal-header\">\r\n          <h2><span uk-icon=\"icon: folder; ratio: 1.4\"></span> New Folder</h2>\r\n        </div>\r\n        <div class=\"uk-modal-body\">\r\n          <div style=\"display: flex; flex-direction: column;\">\r\n            <h3>Type folder name: </h3>\r\n            <input class=\"uk-input uk-form-medium\" #folderInput placeholder=\"folder name\"\r\n              (keyup)=\"folderInput.canSave = folderInput.value && folderInput.value.length > 2\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"uk-modal-footer uk-text-right\">\r\n          <button class=\"uk-button uk-button-danger uk-modal-close  uk-button-small\" type=\"button\">Cancel</button>\r\n          <button class=\"uk-button uk-button-primary  uk-button-small\" [disabled]=\"!folderInput.canSave\"\r\n            (click)=\"saveFolder(folderInput)\">Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, ViewChild, AfterViewInit, ElementRef, OnInit } from '@angular/core';\nimport { UIkit, ModalEvents, UIkitModalElement, UIkitModalOptions } from 'app/shared/types/uikit.types';\nimport { UIkitComponent } from 'app/shared/custom-decorators';\nimport { Folder, Note, NoteStates } from 'app/models/models';\nimport { Crossover } from 'crossover/crossover-ipc.renderer';\nimport { ConfigurationChannel, DataChannel } from 'crossover/crossover.channels';\nimport { AppConfig, DisplayInfo, GenericData } from 'crossover/crossover.models';\nimport * as lodash from 'lodash';\nimport { ThrowStmt } from '@angular/compiler';\nimport { app } from 'electron';\nimport * as _ from 'lodash';\nimport { NoteActions } from './note-actions';\n\nconst uikit: UIkit = (window as any).UIkit;\n\n@Component({ selector: 'app-root', templateUrl: './root.component.html', styleUrls: ['./root.component.scss'] })\nexport class RootComponent implements OnInit, AfterViewInit {\n\n  public lodash = lodash;\n  @ViewChild('addNoteModalRef')\n  @UIkitComponent(uikit.modal)\n  public addNotesModal: UIkitModalElement;\n\n  @ViewChild('createFolderModalRef')\n  @UIkitComponent(uikit.modal)\n  public creteFolderModal: UIkitModalElement;\n\n  public modalVisible: boolean;\n  public folders: Folder[];\n  public selectedFolder: Folder;\n\n  public console = console;\n  public newNote: Note = {};\n\n  public appConfig: AppConfig = { minimized: false };\n  public display: DisplayInfo;\n  public electronWindow: Electron.BrowserWindow;\n  public noteStates = NoteStates;\n  public get folderStats() {\n    return {\n      notesCount: this.selectedFolder.notes.length,\n      completedNotes: this.selectedFolder.notes.filter(n => n.state == NoteStates.completed).length,\n      inProgressNotes: this.selectedFolder.notes.filter(n => n.state == NoteStates.inProgress).length\n    }\n  }\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  async ngOnInit(): Promise<void> {\n    if (Crossover.isElectronRunning) {\n      this.electronWindow = Crossover.electron.remote.getCurrentWindow();\n      this.appConfig.width = this.electronWindow.getBounds().width;\n      // this.electronWindow.on('close', (e) => {\n      //   e.preventDefault();\n      //   this.saveToDisk();\n      //   //setTimeout(() => this.electronWindow.close(), 500);\n      // });\n      console.log(this.electronWindow.getBounds());\n      this.display = await Crossover.get<DisplayInfo>(ConfigurationChannel.with(DisplayInfo));\n      this.folders = await Crossover.get<Folder[]>(DataChannel.with(GenericData), <GenericData>{ storeName: 'notes', action: 'get' });\n    }\n    if (!this.folders) { this.folders = [{ name: \"General\", notes: [], isDefault: true }]; }\n    if (!this.selectedFolder) { this.selectFolder(this.folders[0]); }\n  }\n\n  async ngAfterViewInit(): Promise<void> {\n    uikit.util.on(this.addNotesModal.$el, ModalEvents.show, e => this.modalVisible = true);\n    uikit.util.on(this.addNotesModal.$el, ModalEvents.hidden, e => this.modalVisible = false);\n    uikit.util.on(this.creteFolderModal.$el, ModalEvents.show, e => this.modalVisible = true);\n    uikit.util.on(this.creteFolderModal.$el, ModalEvents.hidden, e => this.modalVisible = false);\n\n    this.addNotesModal.$el.style.right = '46px';\n    (<HTMLElement>document.body).style.setProperty('--border-radius', '15px');\n    //(<HTMLElement>this.elementRef.nativeElement).style.setProperty('--border-radius', '10px');\n  }\n\n  public selectFolder(folder: Folder) {\n    this.folders.forEach(f => f.selected = false);\n    folder.selected = true;\n    this.selectedFolder = folder;\n    this.saveToDisk();\n  }\n\n  public async saveFolder(input: HTMLInputElement) {\n    this.folders.push({ name: input.value, notes: [] });\n    this.selectFolder(this.folders[this.folders.length - 1]);\n    this.creteFolderModal.hide();\n    input.value = '';\n    this.saveToDisk();\n  }\n\n  public createNote() {\n    if (this.appConfig.minimized) {\n      this.toggleView();\n    }\n    this.newNote = { lines: [{}] };\n    this.addNotesModal.show();\n  }\n\n  public saveNote() {\n    this.newNote.date = new Date(Date.now());\n    this.selectedFolder.notes.push(this.newNote);\n    this.addNotesModal.hide();\n  }\n\n  private saveToDisk() {\n    Crossover.send<GenericData>(DataChannel.with(GenericData), { storeName: 'notes', data: this.folders, action: 'save' });\n  }\n\n  public async completeNote(note: Note) {\n    note.lines = note.lines.filter(l => !!l.content);\n    note.lines.filter(l => l.state != NoteStates.canceled).forEach(l => l.state = NoteStates.completed);\n    note.state = NoteStates.completed;\n    this.saveToDisk();\n  }\n\n  public markNote(note: Note) {\n    note.state = note.state === NoteStates.important ? NoteStates.neutral : NoteStates.important;\n    this.saveToDisk();\n  }\n\n  public initNote(noteEl: any, note: Note) {\n    noteEl.allStates = NoteStates;\n    noteEl.actions = new NoteActions(note, () => this.saveToDisk());\n  }\n\n  public removeNote(note: Note) {\n    this.selectedFolder.notes = _.without(this.selectedFolder.notes, note);\n    this.saveToDisk();\n  }\n\n  public changeWindowSize(value) {\n    this.appConfig.width += value;\n    this.electronWindow.setBounds({ width: this.appConfig.width, height: this.display.height, x: this.display.width - this.appConfig.width, y: 0 });\n  }\n\n  public async toggleView() {\n    this.appConfig.minimized = !this.appConfig.minimized;\n\n    if (this.appConfig.minimized) {\n      var centerY = this.display.height / 2 - 150;\n      this.electronWindow.setBounds({ width: 50, height: 300, x: this.display.width - 50, y: centerY });\n    }\n    else {\n      this.electronWindow.setBounds({ width: this.appConfig.width, height: this.display.height, x: this.display.width - this.appConfig.width, y: 0 });\n    }\n  }\n}\n\n","\r\nexport type UIkitElement = object | HTMLElement | string;\r\nexport type UIkitNodes = NodeList | HTMLCollection | UIkitNode;\r\nexport type UIkitNode = Node;\r\n\r\n\r\nexport interface UIkitAccordionOptions {\r\n    active?: number;\r\n    animation?: boolean;\r\n    collapsible?: boolean;\r\n    content?: string;\r\n    duration?: number;\r\n    multiple?: boolean;\r\n    targets?: string;\r\n    toggle?: string;\r\n    transition?: string;\r\n}\r\n\r\nexport interface UIkitAccordionElement {\r\n    toggle(index: string | number | UIkitNode, animate: boolean): void;\r\n}\r\n\r\ntype Accordion = (element: UIkitElement, options?: UIkitAccordionOptions) => UIkitAccordionElement;\r\n\r\nexport interface UIkitAlertOptions {\r\n    animation?: boolean | string;\r\n    duration?: number;\r\n    'sel-close'?: string;\r\n}\r\n\r\nexport interface UIkitAlertElement {\r\n    close(): void;\r\n}\r\n\r\ntype Alert = (element: UIkitElement, options?: UIkitAlertOptions) => UIkitAlertElement;\r\n\r\nexport interface UIkitCoverOptions {\r\n    automute?: boolean;\r\n    width?: number;\r\n    height?: number;\r\n}\r\n\r\ntype Cover = (element: UIkitElement, options?: UIkitCoverOptions) => void;\r\n\r\nexport interface UIkitDropOptions {\r\n    toggle?: string | boolean;\r\n    pos?: string;\r\n    mode?: string;\r\n    'delay-show'?: number;\r\n    'delay-hide'?: number;\r\n    boundary?: string;\r\n    'boundary-align'?: boolean;\r\n    flip?: boolean | string;\r\n    offset?: number;\r\n    animation?: string;\r\n    duration?: number;\r\n}\r\n\r\nexport interface UIkitDropElement {\r\n    show(): void;\r\n    hide(): void;\r\n}\r\n\r\ntype Drop = (element: UIkitElement, options?: UIkitDropOptions) => UIkitDropElement;\r\n\r\nexport interface UIkitDropdownOptions {\r\n    toggle?: string | boolean;\r\n    pos?: string;\r\n    mode?: string;\r\n    'delay-show'?: number;\r\n    'delay-hide'?: number;\r\n    boundary?: string;\r\n    'boundary-align'?: boolean;\r\n    flip?: boolean | string;\r\n    offset?: number;\r\n    animation?: string;\r\n    duration?: number;\r\n}\r\n\r\nexport interface UIkitDropdownElement {\r\n    show(): void;\r\n    hide(): void;\r\n}\r\n\r\ntype Dropdown = (element: UIkitElement, options?: UIkitDropdownOptions) => UIkitDropdownElement;\r\n\r\nexport interface UIkitFormOptions {\r\n    target?: string | boolean;\r\n}\r\n\r\ntype FormCustom = (element: UIkitElement, options?: UIkitFormOptions) => void;\r\n\r\nexport interface UIkitGridOptions {\r\n    margin?: string;\r\n    'first-column'?: string;\r\n    masonry?: boolean;\r\n    parallax?: number;\r\n}\r\n\r\ntype Grid = (element: UIkitElement, options?: UIkitGridOptions) => void;\r\n\r\nexport interface UIkitHeightMatchOptions {\r\n    target?: string;\r\n    row?: boolean;\r\n}\r\n\r\ntype HeightMatch = (element: UIkitElement, options?: UIkitHeightMatchOptions) => void;\r\n\r\nexport interface UIkitIconOptions {\r\n    icon?: string;\r\n    ratio?: number;\r\n}\r\n\r\ntype Icon = (element: UIkitElement, options?: UIkitIconOptions) => {\r\n    svg: Promise<any>;\r\n};\r\n\r\nexport interface UIkitImageOptions {\r\n    dataSrc?: string;\r\n    dataSrcset?: string | boolean;\r\n    sizes?: string | boolean;\r\n    width?: string | boolean;\r\n    height?: string | boolean;\r\n    offsetTop?: string;\r\n    offsetLeft?: string | number;\r\n    target?: string | boolean;\r\n}\r\n\r\ntype Img = (element: UIkitElement, options?: UIkitImageOptions) => void;\r\n\r\nexport interface UIkitLeaderOptions {\r\n    fill?: string;\r\n    media?: number | string;\r\n}\r\n\r\ntype Leader = (element: UIkitElement, options?: UIkitLeaderOptions) => void;\r\n\r\nexport interface UIkitMarginOptions {\r\n    margin?: string;\r\n    'first-column'?: string;\r\n}\r\n\r\ntype Margin = (element: UIkitElement, options?: UIkitMarginOptions) => void;\r\n\r\nexport interface UIkitModalOptions {\r\n    'esc-close'?: boolean;\r\n    'bg-close'?: boolean;\r\n    stack?: boolean;\r\n    container?: string | boolean;\r\n    'cls-page'?: string;\r\n    'cls-panel'?: string;\r\n    'sel-close'?: string;\r\n}\r\n\r\nexport interface UIkitModalElement {\r\n    show(): void;\r\n    hide(): void;\r\n    $el : HTMLElement;\r\n}\r\n\r\nexport enum ModalEvents{\r\n    show = 'show',\r\n    beforeshow= 'beforeshow',\r\n    hidden = 'hidden'\r\n}\r\n\r\nexport interface Modal {\r\n    (element: UIkitElement, options?: UIkitModalOptions): UIkitModalElement;\r\n    alert(message: string, options?: UIkitModalOptions): Promise<void>;\r\n    confirm(message: string, options?: UIkitModalOptions): Promise<void>;\r\n    prompt(content: string, value: string, options?: UIkitModalOptions): Promise<string>;\r\n    dialog(content: string, options?: UIkitModalOptions): Promise<void>;\r\n    labels: {\r\n        ok: string;\r\n        cancel: string;\r\n    };\r\n}\r\n\r\nexport interface UIkitNavOptions {\r\n    targets?: string;\r\n    toggle?: string;\r\n    content?: string;\r\n    collapsible?: boolean;\r\n    multiple?: boolean;\r\n    transition?: string;\r\n    animation?: string;\r\n    duration?: number;\r\n}\r\n\r\nexport interface UIkitNavElement {\r\n    index: string | number | UIkitNode;\r\n    animate: boolean;\r\n}\r\n\r\ntype Nav = (element: UIkitElement, options?: UIkitNavOptions) => UIkitNavElement;\r\n\r\nexport interface UIkitNavbarOptions {\r\n    align?: string;\r\n    mode?: string;\r\n    'delay-show'?: number;\r\n    'delay-hide'?: number;\r\n    boundary?: string;\r\n    'boundary-align'?: boolean;\r\n    offset?: number;\r\n    dropbar?: boolean;\r\n    'dropbar-mode'?: string;\r\n    duration?: number;\r\n}\r\n\r\ntype Navbar = (element: UIkitElement, options?: UIkitNavbarOptions) => void;\r\n\r\nexport interface UIkitOffcanvasOptions {\r\n    mode?: string;\r\n    flip?: boolean;\r\n    overlay?: boolean;\r\n    'esc-close'?: boolean;\r\n    'bg-close'?: boolean;\r\n    container?: string | boolean;\r\n}\r\n\r\nexport interface UIkitOffcanvasElement {\r\n    show(): void;\r\n    hide(): void;\r\n}\r\n\r\ntype Offcanvas = (element: UIkitElement, options?: UIkitOffcanvasOptions) => UIkitOffcanvasElement;\r\n\r\nexport interface UIkitScrollOptions {\r\n    duration?: number;\r\n    offset?: number;\r\n}\r\n\r\nexport interface UIkitScrollElement {\r\n    scrollTo(el: string | UIkitNode): void;\r\n}\r\n\r\ntype Scroll = (element: UIkitElement, options?: UIkitScrollOptions) => UIkitScrollElement;\r\n\r\nexport interface UIkitScrollspyOptions {\r\n    cls?: string;\r\n    hidden?: boolean;\r\n    'offset-top'?: number;\r\n    'offset-left'?: number;\r\n    repeat?: boolean;\r\n    delay?: number;\r\n}\r\n\r\nexport interface UIkitScrollspyNavOptions {\r\n    cls?: string;\r\n    closest?: string;\r\n    scroll?: boolean;\r\n    overflow?: boolean;\r\n    offset?: number;\r\n}\r\n\r\ntype Scrollspy = (element: UIkitElement, options?: UIkitScrollspyOptions) => void;\r\ntype ScrollspyNav = (element: UIkitElement, options?: UIkitScrollspyNavOptions) => void;\r\n\r\nexport interface UIkitStickyOptions {\r\n    top?: number | string;\r\n    bottom?: boolean | string;\r\n    offset?: number | string;\r\n    animation?: string | boolean;\r\n    'cls-active'?: string;\r\n    'cls-inactive'?: string;\r\n    'width-element'?: string | boolean;\r\n    'show-on-up'?: boolean;\r\n    media?: number | string | boolean;\r\n    'target-offset'?: boolean | number;\r\n}\r\n\r\ntype Sticky = (element: UIkitElement, options?: UIkitStickyOptions) => void;\r\n\r\nexport interface UIkitSvgOptions {\r\n    src?: string;\r\n    'stroke-animation'?: boolean;\r\n}\r\n\r\ntype Svg = (element: UIkitElement, options?: UIkitSvgOptions) => {\r\n    svg: Promise<any>;\r\n};\r\n\r\nexport interface UIkitSwiterOptions {\r\n    connect?: string;\r\n    toggle?: string;\r\n    active?: number;\r\n    animation?: string;\r\n    duration?: number;\r\n    swiping?: boolean;\r\n}\r\n\r\nexport interface UIkitSwitcherElement {\r\n    show(index: string | number | UIkitNode): void;\r\n}\r\n\r\ntype Switcher = (element: UIkitElement, options?: UIkitSwiterOptions) => UIkitSwitcherElement;\r\n\r\nexport interface UIkitTabOptions {\r\n    connect?: string;\r\n    toggle?: string;\r\n    active?: number;\r\n    animation?: string;\r\n    duration?: number;\r\n    swiping?: boolean;\r\n    media?: number | string;\r\n}\r\n\r\nexport interface UIkitTabElement {\r\n    show(index: string | number | UIkitNode): void;\r\n}\r\n\r\ntype Tab = (element: UIkitElement, options?: UIkitTabOptions) => UIkitTabElement;\r\n\r\nexport interface UIkitToggleOptions {\r\n    target?: string;\r\n    mode?: string;\r\n    cls?: string;\r\n    media?: number | string;\r\n    animation?: string;\r\n    duration?: number;\r\n    queued?: boolean;\r\n}\r\n\r\nexport interface UIkitToggleElement {\r\n    toggle(): void;\r\n}\r\n\r\ntype Toggle = (element: UIkitElement, options?: UIkitToggleOptions) => UIkitToggleElement;\r\n\r\nexport interface UIkitVideoOptions {\r\n    autoplay?: boolean | string;\r\n    automute?: boolean;\r\n}\r\n\r\ntype Video = (element: UIkitElement, options?: UIkitVideoOptions) => void;\r\n\r\n// Components\r\n\r\nexport interface UIkitCountdownOptions {\r\n    date?: string | boolean;\r\n}\r\n\r\nexport interface UIkitCountdownElement {\r\n    start(): void;\r\n    stop(): void;\r\n}\r\n\r\ntype Countdown = (element: UIkitElement, options?: UIkitCountdownOptions) => UIkitCountdownElement;\r\n\r\nexport interface UIkitFilterOptions {\r\n    target?: string;\r\n    selActive?: string | boolean;\r\n}\r\n\r\ntype Filter = (element: UIkitElement, options?: UIkitFilterOptions) => void;\r\n\r\nexport interface UIkitLightboxPanelOptions {\r\n    animation?: string;\r\n    autoplay?: boolean;\r\n    'autoplay-interval'?: number;\r\n    'pause-on-hover'?: boolean;\r\n    'video-autoplay'?: boolean;\r\n    index?: number;\r\n    velocity?: number;\r\n    preload?: number;\r\n    items?: object[];\r\n    template?: string;\r\n    'delay-controls'?: number;\r\n}\r\n\r\nexport interface UIkitLightboxPanelElement {\r\n    show(index: number): void;\r\n    hide(): void;\r\n    startAutoplay(): void;\r\n    stopAutoplay(): void;\r\n}\r\n\r\nexport interface LightboxPanel {\r\n    (optionsOrElement: UIkitLightboxPanelOptions | UIkitElement): UIkitLightboxPanelElement;\r\n}\r\n\r\nexport interface UIkitLightboxOptions {\r\n    animation?: string;\r\n    autoplay?: number;\r\n    'autoplay-interval'?: number;\r\n    'pause-on-hover'?: boolean;\r\n    'video-autoplay'?: boolean;\r\n    index?: string;\r\n    toggle?: string;\r\n}\r\n\r\nexport interface UIkitLightboxElement {\r\n    show(index: number): void;\r\n    hide(): void;\r\n}\r\n\r\ntype Lightbox = (element: UIkitElement, options?: UIkitLightboxOptions) => UIkitLightboxElement;\r\nexport interface UIkitNotificationOptions {\r\n    message?: string;\r\n    status?: 'primary' | 'success' | 'warning' | 'danger';\r\n    timeout?: number;\r\n    group?: string;\r\n    pos?: 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\r\n}\r\n\r\nexport interface UIkitNotificationElement {\r\n    close(immediate: boolean): void;\r\n}\r\n\r\nexport interface Notification {\r\n    (options: UIkitNotificationOptions): UIkitNotificationElement;\r\n    (message: string, optionsOrStatus?: UIkitNotificationOptions | string): UIkitNotificationElement;\r\n}\r\n\r\nexport interface UIkitParallaxOptions {\r\n    easing?: number;\r\n    target?: string;\r\n    viewport?: number;\r\n    media?: number | string;\r\n}\r\n\r\ntype Parallax = (element: UIkitElement, options?: UIkitParallaxOptions) => void;\r\n\r\nexport interface UIkitSliderOptions {\r\n    autoplay?: boolean;\r\n    'autoplay-interval'?: number;\r\n    center?: boolean;\r\n    draggable?: boolean;\r\n    easing?: string;\r\n    finite?: boolean;\r\n    index?: number;\r\n    'pause-on-hover'?: boolean;\r\n    sets?: boolean;\r\n    velocity?: number;\r\n}\r\n\r\nexport interface UIkitSliderElement {\r\n    show(index: number): void;\r\n    startAutoplay(): void;\r\n    stopAutoplay(): void;\r\n}\r\n\r\ntype Slider = (element: UIkitElement, options?: UIkitSliderOptions) => UIkitSliderElement;\r\n\r\nexport interface UIkitSlideshowOptions {\r\n    animation?: string;\r\n    autoplay?: boolean;\r\n    'autoplay-interval'?: number;\r\n    draggable?: boolean;\r\n    easing?: string;\r\n    finite?: boolean;\r\n    'pause-on-hover'?: boolean;\r\n    index?: number;\r\n    velocity?: number;\r\n    ratio?: string | number;\r\n    'min-height'?: boolean | number;\r\n    'max-height'?: boolean | number;\r\n}\r\n\r\nexport interface UIkitSlidershowElement {\r\n    show(index: number): void;\r\n    startAutoplay(): void;\r\n    stopAutoplay(): void;\r\n}\r\n\r\ntype Slidershow = (element: UIkitElement, options?: UIkitSlideshowOptions) => UIkitSlidershowElement;\r\n\r\nexport interface UIkitSortableOptions {\r\n    group?: string;\r\n    animation?: number;\r\n    threshold?: number;\r\n    'cls-item'?: string;\r\n    'cls-placeholder'?: string;\r\n    'cls-drag'?: string;\r\n    'cls-drag-state'?: string;\r\n    'cls-base'?: string;\r\n    'cls-no-drag'?: string;\r\n    'cls-empty'?: string;\r\n    'cls-custom': string;\r\n    handle?: string;\r\n}\r\n\r\ntype Sortable = (element: UIkitElement, options?: UIkitSortableOptions) => void;\r\n\r\nexport interface UIkitTooltipOptions {\r\n    title?: string;\r\n    pos?: string;\r\n    offset?: number | boolean;\r\n    animation?: string;\r\n    duration?: number;\r\n    delay?: number;\r\n    cls?: string;\r\n}\r\n\r\nexport interface UIkitTooltipElement {\r\n    show(): void;\r\n    hide(): void;\r\n}\r\n\r\ntype Tooltip = (element: UIkitElement, options?: UIkitTooltipOptions) => UIkitTooltipElement;\r\n\r\nexport interface UIkitUploadOptions {\r\n    url?: string;\r\n    multiple?: boolean;\r\n    name?: string;\r\n    params?: object;\r\n    allow?: string | boolean;\r\n    mime?: string | boolean;\r\n    concurrent?: number;\r\n    type?: string;\r\n    method?: string;\r\n    'msg-invalid-mime'?: string;\r\n    'msg-invalid-name'?: string;\r\n    'cls-dragover'?: string;\r\n    abort?: object;\r\n    'before-all'?: object;\r\n    'before-send'?: object;\r\n    complete?: object;\r\n    'complete-all'?: object;\r\n    error?: object;\r\n    load?: object;\r\n    'load-end'?: object;\r\n    'load-start'?: object;\r\n    progress?: object;\r\n    fail?: object;\r\n}\r\n\r\ntype Upload = (element: UIkitElement, options?: UIkitUploadOptions) => void;\r\nexport interface UIkit {\r\n    util: any;\r\n    component: any;\r\n    data: string;\r\n    prefix: string;\r\n    options: any;\r\n    version: string;\r\n    use: any;\r\n    mixin: any;\r\n    extend: any;\r\n    update: any;\r\n\r\n    // Core\r\n    accordion: Accordion;\r\n    alert: Alert;\r\n    cover: Cover;\r\n    drop: Drop;\r\n    dropdown: Dropdown;\r\n    formCustom: FormCustom;\r\n    grid: Grid;\r\n    heightMatch: HeightMatch;\r\n    icon: Icon;\r\n    image: Img;\r\n    leader: Leader;\r\n    margin: Margin;\r\n    modal: Modal;\r\n    nav: Nav;\r\n    navbar: Navbar;\r\n    offcanvas: Offcanvas;\r\n    scroll: Scroll;\r\n    scrollspy: Scrollspy;\r\n    scrollspyNav: ScrollspyNav;\r\n    sticky: Sticky;\r\n    svg: Svg;\r\n    switcher: Switcher;\r\n    tab: Tab;\r\n    toggle: Toggle;\r\n    video: Video;\r\n\r\n    // Components\r\n    notification: Notification;\r\n    countdown: Countdown;\r\n    filter: Filter;\r\n    lightbox: Lightbox;\r\n    lightboxPanel: LightboxPanel;\r\n    parallax: Parallax;\r\n    slider: Slider;\r\n    slideshow: Slidershow;\r\n    sortable: Sortable;\r\n    tooltip: Tooltip;\r\n    upload: Upload;\r\n}\r\n\r\n","import { CrossoverModel, crossoverModel } from './crossover-framework';\r\n\r\n@crossoverModel\r\nexport class DisplayInfo extends CrossoverModel {\r\n  width: number;\r\n  height: number;\r\n}\r\n@crossoverModel\r\nexport class AppConfig extends CrossoverModel {\r\n  minimized?: boolean;\r\n  width?: number;\r\n}\r\n@crossoverModel\r\nexport class GenericData extends CrossoverModel {\r\n  storeName: string;\r\n  data?: any;\r\n  action: 'save' | 'get'\r\n}\r\n","import { Directive, ElementRef, Input, Output, EventEmitter, AfterViewInit, ComponentFactoryResolver, ViewContainerRef, ComponentRef } from '@angular/core';\r\nimport { ConfirmationOverlayComponent } from '../components/confirmation-overlay/confirmation-overlay.component';\r\n\r\n@Directive({ selector: '[confirm-delete]' })\r\nexport class ConfirmDeleteDirective {\r\n\r\n  @Output() onConfirm = new EventEmitter<any>();\r\n  @Output() onCancel = new EventEmitter<any>();\r\n\r\n  private nativeElement: HTMLElement;\r\n  private confirmationOverlay: ComponentRef<ConfirmationOverlayComponent>;\r\n\r\n  constructor(elRef: ElementRef, private componentFactoryResolver: ComponentFactoryResolver, public viewContainerRef: ViewContainerRef) {\r\n    this.nativeElement = elRef.nativeElement as HTMLElement;\r\n    this.nativeElement[\"confirmDelete\"] = () => this.confirmDelete();\r\n  }\r\n\r\n  private confirmDelete() {\r\n\r\n    this.nativeElement.style.filter = 'blur(2px)';\r\n    this.nativeElement.parentElement.style.position = 'relative';\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(ConfirmationOverlayComponent);\r\n    const componentRef = this.viewContainerRef.createComponent(componentFactory);\r\n    componentRef.instance.confirmAction = () => this.handleAction(true);\r\n    componentRef.instance.cancelAction = () => this.handleAction(false);\r\n    this.confirmationOverlay = componentRef;\r\n\r\n    var confirmationElement = componentRef.location.nativeElement;\r\n    confirmationElement.style.left = this.nativeElement.offsetLeft - 1 + 'px';\r\n    confirmationElement.style.top = this.nativeElement.offsetTop - 1 + 'px';\r\n    confirmationElement.style.width = this.nativeElement.clientWidth + 2 + 'px';\r\n    confirmationElement.style.height = this.nativeElement.clientHeight + 2 + 'px';\r\n  }\r\n\r\n  private handleAction(confirm: boolean): void {\r\n    this.viewContainerRef.remove();\r\n    this.nativeElement.style.filter = '';\r\n    this.nativeElement.parentElement.style.position = 'relative';\r\n    if (confirm && this.onConfirm.observers.length) {\r\n      this.onConfirm.emit();\r\n    }\r\n    if (!confirm && this.onCancel.observers.length) {\r\n      this.onCancel.emit();\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n@Directive({\r\n  selector: '[ngInit]'\r\n})\r\nexport class NgInitDirective {\r\n  @Output('ngInit') initEvent: EventEmitter<HTMLElement> = new EventEmitter();\r\n  constructor(private elRef: ElementRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initEvent.emit(this.elRef.nativeElement);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class MainRoutingModule { }\n","export function crossoverModel(typeDef: any) {\r\n    typeDef.internal_type_name = typeDef.name;\r\n}\r\n\r\nexport function crossoverChannel(typeDef: any) {\r\n    typeDef.channelName = typeDef.name;\r\n    console.log(typeDef);\r\n    typeDef.with = mt => withType(typeDef, mt);\r\n}\r\n\r\nfunction withType(typeDef: any, modelTypeDef: any) {\r\n    var crossOverChannel = new typeDef();\r\n    console.log(crossOverChannel);\r\n    crossOverChannel.channelName = typeDef.name;\r\n    crossOverChannel.eventName = `${crossOverChannel.channelName}-${modelTypeDef.internal_type_name}`;\r\n    return crossOverChannel;\r\n}\r\n\r\nexport abstract class CrossoverChannel {\r\n    public static with: <TModel extends CrossoverModel>(modelType: TModel) => CrossoverChannel;\r\n    public static channelName: string;\r\n    public channelName: string;\r\n    public eventName: string;\r\n}\r\n\r\nexport abstract class CrossoverModel {\r\n    public static internal_type_name: string;\r\n}\r\n","// it resolves this issue of repetitive code or multiple properties for a ui component (elementRef && components itself create from the reference)\r\n// async ngAfterViewInit(): Promise < void> {\r\n//     var elementRef = (this.addNotesModal as any) as ElementRef;\r\n//     this.addNotesModal = uikit.modal(elementRef.nativeElement);\r\n// }\r\nimport { UIkitElement } from './types/uikit.types';\r\nexport declare type UIkitComponent = UIkitElement;\r\nexport function UIkitComponent(uikitConstructor: any, options?: any) {\r\n    return function (target: any, key: string) {\r\n        var newVal;\r\n        Object.defineProperty(target, key, {\r\n            get: () => newVal,\r\n            set: (value) => newVal = options? uikitConstructor(value.nativeElement, options) : uikitConstructor(value.nativeElement)\r\n        });\r\n    }\r\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MainRoutingModule } from './main-routing.module';\nimport { RootComponent } from './root/root.component';\nimport { ConfirmDeleteDirective, NgInitDirective } from './shared/directives/directives';\nimport { ConfirmationOverlayComponent } from './shared/components/confirmation-overlay/confirmation-overlay.component';\n\n@NgModule({\n  declarations: [\n    RootComponent,\n    ConfirmDeleteDirective,\n    NgInitDirective,\n    ConfirmationOverlayComponent\n  ],\n  imports: [\n    BrowserModule,\n    MainRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [RootComponent]\n})\n\nexport class MainModule { }\n","import { Note, NoteLine, NoteStates } from 'app/models/models';\r\n\r\nexport class NoteActions {\r\n\r\n  constructor(private note: Note, private onAction: () => void) {\r\n  }\r\n\r\n  public completeLine(line: NoteLine) {\r\n    line.state = NoteStates.completed;\r\n    this.onAction();\r\n  }\r\n\r\n  public cancelLine(line: NoteLine) {\r\n    line.state = NoteStates.canceled;\r\n    this.onAction();\r\n  }\r\n\r\n  public inProgressLine(line: NoteLine) {\r\n    line.state = NoteStates.inProgress;\r\n    this.onAction();\r\n  }\r\n\r\n  public createNewLine() {\r\n    this.note.lines.push({});\r\n    this.note.state = NoteStates.neutral;\r\n    this.onAction();\r\n  };\r\n\r\n\r\n}\r\n","import { IpcRendererEvent } from 'electron';\r\nimport { CrossoverChannel, CrossoverModel } from './crossover-framework';\r\n\r\nconst electron: Electron.RendererInterface = window.require ? window.require('electron') : undefined;\r\nconst electronNotPrezent = e => console.error('electron not available')\r\nexport class Crossover {\r\n\r\n  public static electron: Electron.RendererInterface = electron || { ipcRenderer: { send: electronNotPrezent, on: electronNotPrezent, removeListener: electronNotPrezent, invoke: electronNotPrezent } } as any as Electron.RendererInterface;\r\n  public static isElectronRunning: boolean = !!electron;\r\n\r\n  public static send<TModel extends CrossoverModel>(channel: (new () => CrossoverChannel) | CrossoverChannel, model: TModel) {\r\n    let eventName = channel instanceof CrossoverChannel ? channel.eventName : (channel as any).channelName;\r\n    Crossover.electron.ipcRenderer.send(eventName, model);\r\n  }\r\n\r\n  public static subscribe(channel: (new () => CrossoverChannel) | CrossoverChannel, listener: <T>(event: IpcRendererEvent, model: T) => void) {\r\n    let eventName = channel instanceof CrossoverChannel ? channel.eventName : (channel as any).channelName;\r\n    Crossover.electron.ipcRenderer.on(eventName, listener);\r\n  }\r\n\r\n  public static unsubscribe<TChannel extends CrossoverChannel>(channel: (new () => TChannel) | TChannel, listener: (...args: any[]) => void) {\r\n    let eventName = channel instanceof CrossoverChannel ? channel.eventName : (channel as any).channelName;\r\n    Crossover.electron.ipcRenderer.removeListener(eventName, listener);\r\n  }\r\n\r\n  public static async get<T>(channel: (new () => CrossoverChannel) | CrossoverChannel, model?: CrossoverModel): Promise<T> {\r\n    let eventName = channel instanceof CrossoverChannel ? channel.eventName : (channel as any).channelName;\r\n    var result = await Crossover.electron.ipcRenderer.invoke(eventName, model);\r\n    return result;\r\n  }\r\n}\r\n","import { NoteActions } from 'app/root/note-actions';\r\n\r\nexport class Folder {\r\n  name: string;\r\n  notes: Note[];\r\n  isDefault?: boolean;\r\n  selected?: boolean;\r\n}\r\n\r\nexport class Note {\r\n  title?: string;\r\n  lines?: NoteLine[];\r\n  content?: string;\r\n  date?: Date;\r\n  target?: Date;\r\n  state?: NoteStates;\r\n\r\n  allStates?: typeof NoteStates;\r\n  actions?: NoteActions;\r\n}\r\n\r\nexport interface NoteLine {\r\n  content?: string;\r\n  done?: boolean;\r\n  date?: Date;\r\n  state?: NoteStates;\r\n}\r\n\r\n\r\nexport enum NoteStates {\r\n  completed = 'completed',\r\n  inProgress = 'inProgress',\r\n  canceled = 'canceled',\r\n  important = 'important',\r\n  neutral = 'neutral'\r\n}\r\n\r\n"]}