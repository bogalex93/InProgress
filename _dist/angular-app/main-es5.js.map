{"version":3,"sources":["webpack:///app/$_lazy_route_resource lazy namespace object","webpack:///app/global/environment.ts","webpack:///app/main-routing.module.ts","webpack:///app/main.module.ts","webpack:///app/main.ts","webpack:///app/root/root.component.ts","webpack:///app/root/root.component.html","webpack:///crossover/crossover-ipc.renderer.ts","webpack:///crossover/crossover.channels.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","environment","production","routes","MainRoutingModule","forRoot","imports","MainModule","declarations","providers","bootstrap","takeScreenShot","screenMeta","maxDimension","Math","max","width","height","thumbSize","window","devicePixelRatio","options","types","thumbnailSize","electron","desktopCapturer","getSources","sources","image","thumbnail","toDataURL","document","body","style","background","backgroundAttachment","subscribe","m","bootstrapModule","err","console","error","RootComponent","title","selector","templateUrl","styleUrls","require","CrossoverRenderer","channel","model","channelName","constructor","name","ipcRenderer","send","listener","on","removeListener","invoke","result","CrossoverChannel","WindowEvents","InitializationEvents"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./app/$$_lazy_route_resource lazy recursive\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class MainRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MainRoutingModule } from './main-routing.module';\nimport { RootComponent } from './root/root.component';\n\n@NgModule({\n  declarations: [\n    RootComponent\n  ],\n  imports: [\n    BrowserModule,\n    MainRoutingModule\n  ],\n  providers: [],\n  bootstrap: [RootComponent]\n})\n\nexport class MainModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { MainModule } from './main.module';\nimport { environment } from './global/environment';\nimport { CrossoverRenderer } from 'crossover/crossover-ipc.renderer';\nimport { InitializationEvents } from 'crossover/crossover.channels';\nimport { async } from 'rxjs/internal/scheduler/async';\nimport { ScreenMeta } from 'crossover/crossover.models';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nasync function takeScreenShot(screenMeta: ScreenMeta) {\n  const maxDimension = Math.max(screenMeta.width, screenMeta.height);\n  const thumbSize = {\n    width: maxDimension * window.devicePixelRatio,\n    height: maxDimension * window.devicePixelRatio\n  };\n  let options = { types: ['screen'], thumbnailSize: thumbSize }\n  var sources = await CrossoverRenderer.electron.desktopCapturer.getSources(options);\n  var image = sources[0].thumbnail.toDataURL();\n  document.body.style.background = `url(\"${image}\") top right no-repeat`;\n  document.body.style.backgroundAttachment = \"fixed\";\n}\n\nCrossoverRenderer.subscribe(InitializationEvents, (e, m: ScreenMeta) => takeScreenShot(m));\nplatformBrowserDynamic().bootstrapModule(MainModule)\n  .catch(err => console.error(err));\n","import { Component, AfterViewInit } from '@angular/core';\nimport { electron } from '../shared/services/electron.service';\nimport { CrossoverRenderer } from 'crossover/crossover-ipc.renderer';\nimport { ScreenMeta } from 'crossover/crossover.models';\nimport { InitializationEvents } from 'crossover/crossover.channels';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.scss'],\n})\nexport class RootComponent implements AfterViewInit {\n\n  title = \"it works\";\n  screenMeta: ScreenMeta;\n\n  constructor() {    \n   \n  }\n  \n  async ngAfterViewInit(): Promise<void> {      \n   \n  }\n\n\n}\n","<span [innerText]=\"title\"></span>\r\n<span [innerText]=\"screenMeta\"></span>","import { CrossoverModel } from './crossover.models';\r\nimport { CrossoverChannel } from './crossover.channels';\r\nimport { IpcRendererEvent } from 'electron';\r\n\r\nconst electron: Electron.RendererInterface = window.require('electron');\r\n\r\nexport class CrossoverRenderer {\r\n\r\n    public static electron : Electron.RendererInterface = electron;\r\n\r\n    public static send<TChannel extends CrossoverChannel>(channel: NoParamConstructor<TChannel>, model: CrossoverModel) {\r\n        var channelName = new channel().constructor.name;        \r\n        electron.ipcRenderer.send(channelName, model);\r\n    }\r\n\r\n    public static subscribe<TChannel extends CrossoverChannel>(channel: NoParamConstructor<TChannel>, listener: (event: IpcRendererEvent, model: CrossoverModel) => void) {\r\n        var channelName = new channel().constructor.name;        \r\n        electron.ipcRenderer.on(channelName, listener);\r\n    }\r\n\r\n    public static unsubscribe<TChannel extends CrossoverChannel>(channel: NoParamConstructor<TChannel>, listener: (...args: any[]) => void) {\r\n        var channelName = new channel().constructor.name;\r\n        electron.ipcRenderer.removeListener(channelName, listener);\r\n    }\r\n\r\n    public static async get<TChannel extends CrossoverChannel, TModel extends CrossoverModel>(channel: NoParamConstructor<TChannel>, model?: CrossoverModel): Promise<TModel> {        \r\n        var channelName = new channel().constructor.name;        \r\n        var result = await electron.ipcRenderer.invoke(channelName, model);\r\n        return result;\r\n    }\r\n}\r\n\r\ninterface NoParamConstructor<T> {\r\n    new (): T;\r\n}\r\n","export class CrossoverChannel {\r\n}\r\n\r\nexport class WindowEvents extends CrossoverChannel {\r\n}\r\n\r\nexport class InitializationEvents extends CrossoverChannel {\r\n}\r\n "]}