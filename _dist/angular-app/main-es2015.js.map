{"version":3,"sources":["./app/$_lazy_route_resource lazy namespace object","./app/global/environment.ts","./app/main-routing.module.ts","./app/main.module.ts","./app/main.ts","./app/root/root.component.ts","./app/root/root.component.html","./crossover/crossover-ipc.renderer.ts","./crossover/crossover.channels.ts","./crossover/crossover.framework.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./app/$$_lazy_route_resource lazy recursive\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class MainRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MainRoutingModule } from './main-routing.module';\nimport { RootComponent } from './root/root.component';\n\n@NgModule({\n  declarations: [\n    RootComponent\n  ],\n  imports: [\n    BrowserModule,\n    MainRoutingModule\n  ],\n  providers: [],\n  bootstrap: [RootComponent]\n})\n\nexport class MainModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { MainModule } from './main.module';\nimport { environment } from './global/environment';\nimport { Crossover } from 'crossover/crossover-ipc.renderer';\nimport { InitializationChannel } from 'crossover/crossover.channels';\nimport { ScreenMeta } from 'crossover/crossover.models';\n\nlet screenMeta : ScreenMeta;\n\nif (environment.production) {\n  enableProdMode();\n}\n\nasync function takeScreenShot() {  \n  const maxDimension = Math.max(screenMeta.width, screenMeta.height);\n  const thumbSize = { width: maxDimension * window.devicePixelRatio, height: maxDimension * window.devicePixelRatio };\n  let options = { types: ['screen'], thumbnailSize: thumbSize };\n  var sources = await Crossover.electron.desktopCapturer.getSources(options);\n  var image = sources[0].thumbnail.toDataURL();\n  document.body.style.background = `url(\"${image}\") top right no-repeat`;\n}\n\nCrossover.subscribe(InitializationChannel, (e, m: ScreenMeta) => { screenMeta = m; takeScreenShot()});\n//window.onblur = e=> document.body.style.background =  \"transparent\"; \nplatformBrowserDynamic().bootstrapModule(MainModule).catch(err => console.error(err));\n","import { Component, AfterViewInit } from '@angular/core';\nimport { ScreenMeta } from 'crossover/crossover.models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.scss'],\n})\nexport class RootComponent implements AfterViewInit {\n\n  title = \"it works\";\n  screenMeta: ScreenMeta;\n\n  constructor() {    \n   \n  }\n  \n  async ngAfterViewInit(): Promise<void> {      \n   \n  }\n\n\n}\n","<div class=\"container\">\r\n    <div class=\"note\">\r\n        <div class=\"title-container\">\r\n            <h2 class=\"title\">Note title</h2>\r\n            <span class=\"date\">18/03/2020</span>\r\n        </div>\r\n        <div class=\"body\">\r\n            description\r\n        </div>\r\n    </div>\r\n    <div class=\"note\">\r\n        <div class=\"title-container\">\r\n            <h3 class=\"title\">Note title</h3>\r\n            <span class=\"date\">18/03/2020</span>\r\n        </div>\r\n        <div class=\"body\">\r\n            description\r\n        </div>\r\n    </div>\r\n    <div class=\"note success\">\r\n        <div class=\"title-container\">\r\n            <h2 class=\"title\">Note title</h2>\r\n            <span class=\"date\">18/03/2020</span>\r\n        </div>\r\n        <div class=\"body\">\r\n            description\r\n        </div>\r\n    </div>\r\n</div>","import { CrossoverModel } from './crossover.models';\r\nimport { CrossoverChannel } from './crossover.channels';\r\nimport { IpcRendererEvent } from 'electron';\r\n\r\nconst electron: Electron.RendererInterface = window.require('electron');\r\n\r\nexport class Crossover {\r\n\r\n    public static electron : Electron.RendererInterface = electron;\r\n\r\n    public static send<TChannel extends CrossoverChannel>(channel: (new () => TChannel) | TChannel, model: CrossoverModel) {\r\n        let eventName = channel instanceof CrossoverChannel? channel.eventName : new channel().constructor.name;        \r\n        electron.ipcRenderer.send(eventName, model);\r\n    }\r\n\r\n    public static subscribe<TChannel extends CrossoverChannel>(channel: (new () => TChannel) | TChannel, listener: (event: IpcRendererEvent, model: CrossoverModel) => void) {        \r\n        let eventName = channel instanceof CrossoverChannel? channel.eventName : new channel().constructor.name;  \r\n        electron.ipcRenderer.on(eventName, listener);\r\n    }\r\n\r\n    public static unsubscribe<TChannel extends CrossoverChannel>(channel: (new () => TChannel) | TChannel, listener: (...args: any[]) => void) {\r\n        let eventName = channel instanceof CrossoverChannel? channel.eventName : new channel().constructor.name;  \r\n        electron.ipcRenderer.removeListener(eventName, listener);\r\n    }\r\n\r\n    public static async get<TChannel extends CrossoverChannel, TModel extends CrossoverModel>(channel: (new () => TChannel) | TChannel, model?: CrossoverModel): Promise<TModel> {        \r\n        let eventName = channel instanceof CrossoverChannel? channel.eventName : new channel().constructor.name;  \r\n        var result = await electron.ipcRenderer.invoke(eventName, model);\r\n        return result;\r\n    }\r\n}\r\n","import { crossoverChannel } from './crossover.framework';\r\n\r\nexport abstract class CrossoverChannel {\r\n    public static withType: (modelType: new () => any) => CrossoverChannel;\r\n    public static channelName: string;\r\n    \r\n    public channelName: string;\r\n    public eventName: string;\r\n}\r\n\r\n@crossoverChannel\r\nexport class InitializationChannel extends CrossoverChannel {\r\n}\r\n\r\n\r\n","export function crossoverChannel(target: any) {\r\n    target.channelName = target.name;    \r\n    target.withType = mt => withType(target, mt);    \r\n}\r\n\r\nfunction withType(typeDef: any, modelType: new () => any) {\r\n    var crossOverChannel = new typeDef();\r\n    crossOverChannel.channelName = typeDef.name;    \r\n    let modelTypeName = new modelType().constructor.name;\r\n    crossOverChannel.eventName = `${crossOverChannel.channelName}-${modelTypeName}`;\r\n    return crossOverChannel;\r\n}"],"sourceRoot":"webpack:///"}