{"version":3,"sources":["./app/$_lazy_route_resource lazy namespace object","./app/global/environment.ts","./app/main-routing.module.ts","./app/main.module.ts","./app/main.ts","./app/root/root.component.ts","./app/root/root.component.html"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./app/$$_lazy_route_resource lazy recursive\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class MainRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MainRoutingModule } from './main-routing.module';\nimport { RootComponent } from './root/root.component';\n\n@NgModule({\n  declarations: [\n    RootComponent\n  ],\n  imports: [\n    BrowserModule,\n    MainRoutingModule\n  ],\n  providers: [],\n  bootstrap: [RootComponent]\n})\n\nexport class MainModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { MainModule } from './main.module';\nimport { environment } from './global/environment';\nimport { CrossoverRenderer } from 'crossover/crossover-ipc.renderer';\nimport { InitializationEvents } from 'crossover/crossover.channels';\nimport { ScreenMeta } from 'crossover/crossover.models';\n\nlet screenMeta : ScreenMeta;\n\nif (environment.production) {\n  enableProdMode();\n}\n\n// async function takeScreenShot() {  \n//   const maxDimension = Math.max(screenMeta.width, screenMeta.height);\n//   const thumbSize = { width: maxDimension * window.devicePixelRatio, height: maxDimension * window.devicePixelRatio };\n//   let options = { types: ['screen'], thumbnailSize: thumbSize };\n//   var sources = await CrossoverRenderer.electron.desktopCapturer.getSources(options);\n//   var image = sources[0].thumbnail.toDataURL();\n//   document.body.style.background = `url(\"${image}\") top right no-repeat`;\n// }\n\n//CrossoverRenderer.subscribe(InitializationEvents, (e, m: ScreenMeta) => { screenMeta = m; takeScreenShot()});\n//window.onblur = e=> document.body.style.background =  \"transparent\"; \nplatformBrowserDynamic().bootstrapModule(MainModule).catch(err => console.error(err));\n","import { Component, AfterViewInit } from '@angular/core';\nimport { electron } from '../shared/services/electron.service';\nimport { CrossoverRenderer } from 'crossover/crossover-ipc.renderer';\nimport { ScreenMeta } from 'crossover/crossover.models';\nimport { InitializationEvents } from 'crossover/crossover.channels';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.scss'],\n})\nexport class RootComponent implements AfterViewInit {\n\n  title = \"it works\";\n  screenMeta: ScreenMeta;\n\n  constructor() {    \n   \n  }\n  \n  async ngAfterViewInit(): Promise<void> {      \n   \n  }\n\n\n}\n","<div class=\"container\">\r\n    <div class=\"note\">\r\n        <div class=\"title-container\">\r\n            <h2 class=\"title\">Note title</h2>\r\n            <span class=\"date\">18/03/2020</span>\r\n        </div>\r\n        <div class=\"body\">\r\n            description\r\n        </div>\r\n    </div>\r\n    <div class=\"note\">\r\n        <div class=\"title-container\">\r\n            <h2 class=\"title\">Note title</h2>\r\n            <span class=\"date\">18/03/2020</span>\r\n        </div>\r\n        <div class=\"body\">\r\n            description\r\n        </div>\r\n    </div>\r\n    <div class=\"note success\">\r\n        <div class=\"title-container\">\r\n            <h2 class=\"title\">Note title</h2>\r\n            <span class=\"date\">18/03/2020</span>\r\n        </div>\r\n        <div class=\"body\">\r\n            description\r\n        </div>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}