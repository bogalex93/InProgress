{"version":3,"sources":["./app/$_lazy_route_resource lazy namespace object","./app/global/environment.ts","./app/main-routing.module.ts","./app/main.module.ts","./app/main.ts","./app/root/root.component.ts","./app/root/root.component.html","./app/shared/services/electron.service.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./app/$$_lazy_route_resource lazy recursive\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class MainRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MainRoutingModule } from './main-routing.module';\nimport { RootComponent } from './root/root.component';\n\n@NgModule({\n  declarations: [\n    RootComponent\n  ],\n  imports: [\n    BrowserModule,\n    MainRoutingModule\n  ],\n  providers: [],\n  bootstrap: [RootComponent]\n})\n\nexport class MainModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { MainModule } from './main.module';\nimport { environment } from './global/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(MainModule)\n.catch(err => console.error(err));\n","import { Component, AfterViewInit } from '@angular/core';\nimport { electron } from '../shared/services/electron.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.scss'],\n})\nexport class RootComponent implements AfterViewInit {\n\n  title = \"it works\";\n\n  constructor() {    \n  }\n  ngAfterViewInit(): void {\n    this.takeScreenShot();\n  }\n\n  async takeScreenShot() {\n    // var sources = await this.electronService.desktopCapturer.getSources({ types: ['window','screen'] });\n    //let source = sources[0];\n    //  console.log(sources);\n\n    const thumbSize = determineScreenShotSize()\n    let options = { types: ['screen'], thumbnailSize: thumbSize }    \n    var sources = await electron.desktopCapturer.getSources(options);  \n    var image = sources[0].thumbnail.toDataURL();        \n    document.body.style.background = `url(\"${image}\") top right no-repeat`;\n    document.body.style.backgroundAttachment = \"fixed\";\n\n    function determineScreenShotSize () {\n      const width = 2560;\n      const height = 1440;\n      const maxDimension = Math.max(width, height)\n      return {\n        width: maxDimension * window.devicePixelRatio,\n        height: maxDimension * window.devicePixelRatio\n      }\n    }\n  }\n\n  \n}\n","<span [innerText]=\"title\"></span>","import { Injectable } from '@angular/core';\r\nimport * as Electron from 'electron';\r\nexport const electron : Electron.RendererInterface = window.require('electron');\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ElectronService {\r\n\r\n    public electron: Electron.RendererInterface;\r\n    constructor() {\r\n        this.electron = electron;\r\n    }\r\n\r\n    /**\r\n     * determines if SPA is running in Electron\r\n     */\r\n    public get isElectronApp(): boolean {\r\n        return !!window.navigator.userAgent.match(/Electron/);\r\n    }\r\n\r\n    public get isMacOS(): boolean {\r\n        return this.isElectronApp && process.platform === 'darwin';\r\n    }\r\n\r\n    public get isWindows(): boolean {\r\n        return this.isElectronApp && process.platform === 'win32';\r\n    }\r\n\r\n    public get isLinux(): boolean {\r\n        return this.isElectronApp && process.platform === 'linux';\r\n    }\r\n\r\n    public get isX86(): boolean {\r\n        return this.isElectronApp && process.arch === 'ia32';\r\n    }\r\n\r\n    public get isX64(): boolean {\r\n        return this.isElectronApp && process.arch === 'x64';\r\n    }\r\n\r\n    public get isArm(): boolean {\r\n        return this.isElectronApp && process.arch === 'arm';\r\n    }\r\n\r\n    public get desktopCapturer(): Electron.DesktopCapturer {\r\n        return this.electron ? this.electron.desktopCapturer : null;\r\n    }\r\n\r\n    public get ipcRenderer(): Electron.IpcRenderer {\r\n        return this.electron ? this.electron.ipcRenderer : null;\r\n    }\r\n\r\n    public get remote(): Electron.Remote {\r\n        return this.electron ? this.electron.remote : null;\r\n    }\r\n\r\n    public get webFrame(): Electron.WebFrame {\r\n        return this.electron ? this.electron.webFrame : null;\r\n    }\r\n\r\n    public get clipboard(): Electron.Clipboard {\r\n        return this.electron ? this.electron.clipboard : null;\r\n    }\r\n\r\n    public get crashReporter(): Electron.CrashReporter {\r\n        return this.electron ? this.electron.crashReporter : null;\r\n    }\r\n\r\n    public get process(): any {\r\n        return this.remote ? this.remote.process : null;\r\n    }\r\n\r\n    public get nativeImage(): typeof Electron.nativeImage {\r\n        return this.electron ? this.electron.nativeImage : null;\r\n    }\r\n\r\n    public get screen(): Electron.Screen {\r\n        return this.electron ? this.remote.screen : null;\r\n    }\r\n\r\n    public get shell(): Electron.Shell {\r\n        return this.electron ? this.electron.shell : null;\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}