{"version":3,"sources":["./app/main.ts","./app/shared/components/confirmation-overlay/confirmation-overlay.component.ts","./app/shared/components/confirmation-overlay/confirmation-overlay.component.html","./app/$_lazy_route_resource lazy namespace object","./app/global/environment.ts","./crossover/crossover.channels.ts","./app/root/root.component.ts","./app/root/root.component.html","./app/shared/types/uikit.types.ts","./crossover/crossover.models.ts","./app/shared/directives/directives.ts","./app/main-routing.module.ts","./crossover/crossover-framework.ts","./app/shared/custom-decorators.ts","./app/main.module.ts","./app/root/note-actions.ts","./crossover/crossover-ipc.renderer.ts","./app/models/models.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { MainModule } from './main.module';\nimport { environment } from './global/environment';\nimport { Crossover } from 'crossover/crossover-ipc.renderer';\nimport { InitializationChannel } from 'crossover/crossover.channels';\nimport { DisplayInfo } from 'crossover/crossover.models';\nimport { SourcesOptions, DesktopCapturerSource } from 'electron';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nasync function takeScreenShot(displayInfo: DisplayInfo) {\n  const maxDimension = Math.max(displayInfo.width, displayInfo.height);\n  const thumbSize = { width: maxDimension * window.devicePixelRatio, height: maxDimension * window.devicePixelRatio };\n  let options: SourcesOptions = { types: ['screen'], thumbnailSize: thumbSize };\n  var sources: DesktopCapturerSource[] = await Crossover.electron.desktopCapturer.getSources(options);\n  var image = sources[0].thumbnail.toDataURL();\n  document.body.style.background = `url(\"${image}\") top right no-repeat`;\n}\n\n//Crossover.subscribe(InitializationChannel.with(ScreenMeta), (e, m: ScreenMeta) => takeScreenShot(m));\n\nplatformBrowserDynamic().bootstrapModule(MainModule).catch(err => console.error(err));\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-confirmation-overlay',\n  templateUrl: './confirmation-overlay.component.html',\n  styleUrls: ['./confirmation-overlay.component.scss']\n})\nexport class ConfirmationOverlayComponent implements OnInit {\n\n  @Input() confirmQuestion: string;\n  @Input() confirmAction: () => void;\n  @Input() cancelAction: () => void;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3 class=\"confirm-question\" *ngIf=\"confirmQuestion\" [innerText]=\"confirmQuestion\"></h3>\n<div class=\"confirm-actions\">\n  <span uk-icon=\"icon: close; ratio: 2.5\" (click)=\"cancelAction()\" class=\"icon-btn delete\"></span>\n  <span uk-icon=\"icon: check; ratio: 2.5\" (click)=\"confirmAction()\" class=\"icon-btn done\"></span>\n</div>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"9tog\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { crossoverChannel, CrossoverChannel } from './crossover-framework';\r\n\r\n@crossoverChannel\r\nexport class ConfigurationChannel extends CrossoverChannel {\r\n}\r\n\r\n@crossoverChannel\r\nexport class InitializationChannel extends CrossoverChannel {\r\n}\r\n\r\n\r\n@crossoverChannel\r\nexport class DataChannel extends CrossoverChannel {\r\n}\r\n\r\n\r\n\r\n","import { Component, ViewChild, AfterViewInit, ElementRef, OnInit } from '@angular/core';\nimport { UIkit, ModalEvents, UIkitModalElement, UIkitModalOptions } from 'app/shared/types/uikit.types';\nimport { UIkitComponent } from 'app/shared/custom-decorators';\nimport { Folder, Note, NoteStates } from 'app/models/models';\nimport { Crossover } from 'crossover/crossover-ipc.renderer';\nimport { ConfigurationChannel, DataChannel } from 'crossover/crossover.channels';\nimport { AppConfig, DisplayInfo, GenericData } from 'crossover/crossover.models';\nimport * as lodash from 'lodash';\nimport { ThrowStmt } from '@angular/compiler';\nimport { app } from 'electron';\nimport * as _ from 'lodash';\nimport { NoteActions } from './note-actions';\n\nconst uikit: UIkit = (window as any).UIkit;\n\n@Component({ selector: 'app-root', templateUrl: './root.component.html', styleUrls: ['./root.component.scss'] })\nexport class RootComponent implements OnInit, AfterViewInit {\n\n  public lodash = lodash;\n  @ViewChild('addNoteModalRef')\n  @UIkitComponent(uikit.modal)\n  public addNotesModal: UIkitModalElement;\n\n  @ViewChild('createFolderModalRef')\n  @UIkitComponent(uikit.modal)\n  public creteFolderModal: UIkitModalElement;\n\n  public modalVisible: boolean;\n  public folders: Folder[];\n  public selectedFolder: Folder;\n\n  public console = console;\n  public newNote: Note = {};\n\n  public appConfig: AppConfig = { minimized: false };\n  public display: DisplayInfo;\n  public electronWindow: Electron.BrowserWindow;\n  public noteStates = NoteStates;\n  public get folderStats() {\n    return {\n      notesCount: this.selectedFolder.notes.length,\n      completedNotes: this.selectedFolder.notes.filter(n => n.state == NoteStates.completed).length,\n      inProgressNotes: this.selectedFolder.notes.filter(n => n.state == NoteStates.inProgress).length\n    }\n  }\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  async ngOnInit(): Promise<void> {\n    if (Crossover.isElectronRunning) {\n      this.electronWindow = Crossover.electron.remote.getCurrentWindow();\n      this.appConfig.width = this.electronWindow.getBounds().width;\n      // this.electronWindow.on('close', (e) => {\n      //   e.preventDefault();\n      //   this.saveToDisk();\n      //   //setTimeout(() => this.electronWindow.close(), 500);\n      // });\n      console.log(this.electronWindow.getBounds());\n      this.display = await Crossover.get<DisplayInfo>(ConfigurationChannel.with(DisplayInfo));\n      this.folders = await Crossover.get<Folder[]>(DataChannel.with(GenericData), <GenericData>{ storeName: 'notes', action: 'get' });\n    }\n    if (!this.folders) { this.folders = [{ name: \"General\", notes: [], isDefault: true }]; }\n    if (!this.selectedFolder) { this.selectFolder(this.folders[0]); }\n  }\n\n  async ngAfterViewInit(): Promise<void> {\n    uikit.util.on(this.addNotesModal.$el, ModalEvents.show, e => this.modalVisible = true);\n    uikit.util.on(this.addNotesModal.$el, ModalEvents.hidden, e => this.modalVisible = false);\n    uikit.util.on(this.creteFolderModal.$el, ModalEvents.show, e => this.modalVisible = true);\n    uikit.util.on(this.creteFolderModal.$el, ModalEvents.hidden, e => this.modalVisible = false);\n\n    this.addNotesModal.$el.style.right = '46px';\n    (<HTMLElement>document.body).style.setProperty('--border-radius', '15px');\n    //(<HTMLElement>this.elementRef.nativeElement).style.setProperty('--border-radius', '10px');\n  }\n\n  public selectFolder(folder: Folder) {\n    this.folders.forEach(f => f.selected = false);\n    folder.selected = true;\n    this.selectedFolder = folder;\n    this.saveToDisk();\n  }\n\n  public async saveFolder(input: HTMLInputElement) {\n    this.folders.push({ name: input.value, notes: [] });\n    this.selectFolder(this.folders[this.folders.length - 1]);\n    this.creteFolderModal.hide();\n    input.value = '';\n    this.saveToDisk();\n  }\n\n  public createNote() {\n    if (this.appConfig.minimized) {\n      this.toggleView();\n    }\n    this.newNote = { lines: [{}] };\n    this.addNotesModal.show();\n  }\n\n  public saveNote() {\n    this.newNote.date = new Date(Date.now());\n    this.selectedFolder.notes.push(this.newNote);\n    this.addNotesModal.hide();\n  }\n\n  private saveToDisk() {\n    Crossover.send<GenericData>(DataChannel.with(GenericData), { storeName: 'notes', data: this.folders, action: 'save' });\n  }\n\n  public async completeNote(note: Note) {\n    note.lines = note.lines.filter(l => !!l.content);\n    note.lines.filter(l => l.state != NoteStates.canceled).forEach(l => l.state = NoteStates.completed);\n    note.state = NoteStates.completed;\n    this.saveToDisk();\n  }\n\n  public markNote(note: Note) {\n    note.state = note.state === NoteStates.important ? NoteStates.neutral : NoteStates.important;\n    this.saveToDisk();\n  }\n\n  public initNote(noteEl: any, note: Note) {\n    noteEl.allStates = NoteStates;\n    noteEl.actions = new NoteActions(note, () => this.saveToDisk());\n  }\n\n  public removeNote(note: Note) {\n    this.selectedFolder.notes = _.without(this.selectedFolder.notes, note);\n    this.saveToDisk();\n  }\n\n  public changeWindowSize(value) {\n    this.appConfig.width += value;\n    this.electronWindow.setBounds({ width: this.appConfig.width, height: this.display.height, x: this.display.width - this.appConfig.width, y: 0 });\n  }\n\n  public async toggleView() {\n    this.appConfig.minimized = !this.appConfig.minimized;\n\n    if (this.appConfig.minimized) {\n      var centerY = this.display.height / 2 - 150;\n      this.electronWindow.setBounds({ width: 50, height: 300, x: this.display.width - 50, y: centerY });\n    }\n    else {\n      this.electronWindow.setBounds({ width: this.appConfig.width, height: this.display.height, x: this.display.width - this.appConfig.width, y: 0 });\n    }\n  }\n}\n\n","<div class=\"home-root\">\r\n  <div id=\"content-container\" class=\"content-container\" *ngIf=\"selectedFolder\"\r\n    [ngClass]=\"{'blur': modalVisible,'minimized': appConfig.minimized}\">\r\n    <h2 class=\"folder-title\">\r\n      <div style=\"display: flex;\"><span uk-icon=\"icon: folder; ratio: 1.6\"></span> <span style=\"margin-left: 4px\"\r\n          [innerText]=\"selectedFolder.name\"></span></div>\r\n      <div style=\"font-size: 11px; display: flex; flex-direction: column; line-height: 12px;\">\r\n        <div>\r\n          <span [innerText]=\"folderStats.notesCount\"></span>\r\n          <span style=\"margin-left: 4px;\">notes</span>\r\n        </div>\r\n        <div style=\"color: #2ca8ff;\">\r\n          <span [innerText]=\"folderStats.inProgressNotes\"></span>\r\n          <span style=\"margin-left: 4px;\">in progress</span>\r\n        </div>\r\n        <div style=\"color: limegreen;\">\r\n          <span [innerText]=\"folderStats.completedNotes\"></span>\r\n          <span style=\"margin-left: 4px;\">completed</span>\r\n        </div>\r\n      </div>\r\n    </h2>\r\n    <div class=\"notes-list\">\r\n      <ng-container *ngFor=\"let note of selectedFolder.notes\">\r\n        <div class=\"note uk-animation-scale-up\" confirm-delete #noteEl (ngInit)=\"initNote(noteEl, note)\"\r\n          (onConfirm)=\"removeNote(note)\" [ngClass]=\"note.state\">\r\n          <div class=\"title-container\">\r\n            <span class=\"meta\">\r\n              <span class=\"important\" *ngIf=\"note.state == noteStates.important\"\r\n                uk-icon=\"icon: warning; ratio: 1.3\"></span>\r\n              <span class=\"done\" *ngIf=\"note.state == noteStates.completed\" uk-icon=\"icon: check; ratio: 1.3\"></span>\r\n            </span>\r\n            <h3 class=\"title\">\r\n              <span uk-icon=\"icon: comment; ratio: 1.2\"></span>\r\n              <span style=\"margin-left: 10px;\" [innerText]=\"note.title\"></span>\r\n            </h3>\r\n          </div>\r\n          <div class=\"body\">\r\n            <div class=\"line\" *ngFor=\"let line of note.lines\" [ngClass]=\"line.state\">\r\n              <!-- <textarea style=\"min-height: 120px;\" [(ngModel)]=\"newNote.content\" placeholder=\"content\"\r\n                              class=\"uk-textarea\"></textarea> -->\r\n              <span uk-icon=\"icon: minus; ratio: 1\" class=\"bulet\"></span>\r\n              <input type=\"text\" [(ngModel)]=\"line.content\"\r\n                [disabled]=\"line.state == noteStates.completed || line.state == noteStates.canceled\" class=\"uk-input\"\r\n                placeholder=\"new line\" />\r\n\r\n              <span uk-icon=\"icon: trash; ratio: 1\" class=\"icon-btn delete\" uk-tooltip=\"delete line\"\r\n                (click)=\"note.lines = lodash.without(note.lines, line)\"></span>\r\n              <span *ngIf=\"line.content\" uk-icon=\"icon: check; ratio: 1.1\" class=\"icon-btn done\" uk-tooltip=\"complete\"\r\n                (click)=\"noteEl.actions.completeLine(line)\"></span>\r\n              <span *ngIf=\"line.content\" uk-icon=\"icon: pull; ratio: 1.1\" class=\"icon-btn default\"\r\n                uk-tooltip=\"in progress\" (click)=\"noteEl.actions.inProgressLine(line)\"></span>\r\n              <span *ngIf=\"line.content\" uk-icon=\"icon: ban; ratio: 1.1\" class=\"icon-btn default\" uk-tooltip=\"cancel\"\r\n                (click)=\"noteEl.actions.cancelLine(line)\" style=\"margin-right: 4px;\"></span>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"actions\">\r\n            <span uk-icon=\"icon: plus; ratio: 1.1\" uk-tooltip=\"add new line\" class=\"icon-btn\"\r\n              (click)=\"noteEl.actions.createNewLine()\"></span>\r\n            <span uk-icon=\"icon: check; ratio: 1.1\" uk-tooltip=\"mark as completed\" (click)=\"completeNote(note)\"\r\n              class=\"icon-btn done\" [ngClass]=\"{'disabled': note.state == noteStates.completed}\"></span>\r\n            <span uk-icon=\"icon: calendar; ratio: 1.1\" uk-tooltip=\"set deadline\" class=\"icon-btn\"\r\n              [ngClass]=\"{'disabled': note.state == noteStates.completed}\"></span>\r\n            <span uk-icon=\"icon: warning; ratio: 1.1\" uk-tooltip=\"mark as important\"\r\n              (click)=\"markNote(note)\" class=\"icon-btn\"\r\n              [ngClass]=\"{'disabled':note.state == noteStates.completed}\"></span>\r\n            <span uk-icon=\"icon: trash; ratio: 1.1\" class=\"icon-btn delete\" uk-tooltip=\"delete note\"\r\n              (click)=\"noteEl.confirmDelete()\"></span>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <div class=\"menu-container\" [ngClass]=\"{'minimized': appConfig.minimized}\">\r\n    <div class=\"menu\">\r\n      <div class=\"uk-inline\">\r\n        <button class=\"btn-new-note\" (click)=\"toggleView()\">\r\n          <span *ngIf=\"appConfig.minimized\" uk-tooltip=\"expand\" uk-icon=\"icon: expand; ratio: 2\"></span>\r\n          <span *ngIf=\"!appConfig.minimized\" uk-tooltip=\"collapse\" uk-icon=\"icon: shrink; ratio: 2\"></span>\r\n        </button>\r\n      </div>\r\n      <div class=\"uk-inline\">\r\n        <button class=\"btn-new-note\" (click)=\"createNote()\" uk-tooltip=\"new note\">\r\n          <span uk-icon=\"icon: plus; ratio: 2\"></span>\r\n        </button>\r\n      </div>\r\n      <div class=\"uk-inline\">\r\n        <button [disabled]=\"appConfig.minimized\" uk-tooltip=\"folders\">\r\n          <span uk-icon=\"icon: folder; ratio: 2\"></span>\r\n        </button>\r\n        <div uk-dropdown=\"pos: left\">\r\n          <ul class=\"uk-nav uk-dropdown-nav\">\r\n            <li><a (click)=\"creteFolderModal.show()\"><span uk-icon=\"icon: plus; ratio: 1\"></span> New\r\n                Folder</a></li>\r\n            <li *ngFor=\"let folder of folders\">\r\n              <a [ngClass]=\"{'active': folder.selected}\">\r\n                <span (click)=\"selectFolder(folder)\">\r\n                  <span uk-icon=\"icon: folder; ratio: 1\"></span> <span style=\"margin-left: 4px\"\r\n                    [innerText]=\"folder.name\"></span>\r\n                </span>\r\n                <span *ngIf=\"folder.selected\" style=\"float: right;\" uk-icon=\"icon: check; ratio: 1\"></span>\r\n                <span *ngIf=\"!folder.isDefault && !folder.selected\" class=\"icon-btn delete\" style=\"float: right;\"\r\n                  uk-icon=\"icon: trash; ratio: 1\"></span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"uk-inline\">\r\n        <button [disabled]=\"appConfig.minimized\">\r\n          <span uk-icon=\"icon: settings; ratio: 2\"></span>\r\n        </button>\r\n        <div uk-dropdown=\"pos: left\">\r\n          <ul class=\"uk-nav uk-dropdown-nav\">\r\n            <li><a><span class=\"icon-btn\" uk-icon=\"icon: plus; ratio: 1\" (click)=\"changeWindowSize(20)\"></span> Width:\r\n                {{ this.appConfig.width }}px <span class=\"icon-btn delete\" uk-icon=\"icon: minus; ratio: 1\"\r\n                  (click)=\"changeWindowSize(-20)\"></span></a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"add-note-modal\" class=\"uk-flex-top\" #addNoteModalRef>\r\n    <div class=\"uk-modal-dialog uk-margin-auto-vertical uk-animation-scale-up\">\r\n      <div class=\"add-note\">\r\n        <div class=\"uk-modal-header\">\r\n          <h2 class=\"title\" style=\"margin: 10px 0 0 0;\"><span uk-icon=\"icon: comment; ratio: 1.4\"></span>\r\n            <input type=\"text\" style=\"font-size: 20px;\" [(ngModel)]=\"newNote.title\" class=\"uk-input\"\r\n              placeholder=\"title\" />\r\n          </h2>\r\n        </div>\r\n        <div class=\"uk-modal-body\">\r\n          <div class=\"line\" *ngFor=\"let line of newNote.lines\">\r\n            <!-- <textarea style=\"min-height: 120px;\" [(ngModel)]=\"newNote.content\" placeholder=\"content\"\r\n                      class=\"uk-textarea\"></textarea> -->\r\n            <span uk-icon=\"icon: pencil; ratio: 1.4\"></span>\r\n            <input type=\"text\" [(ngModel)]=\"line.content\" class=\"uk-input\" placeholder=\"new line\" />\r\n            <span uk-icon=\"icon: trash; ratio: 1.2\" class=\"icon-btn delete\"\r\n              (click)=\"newNote.lines = lodash.without(newNote.lines, line)\"></span>\r\n          </div>\r\n          <p><span uk-icon=\"icon: plus; ratio: 1.2\" class=\"icon-btn\" (click)=\"newNote.lines.push({})\"></span>\r\n          </p>\r\n        </div>\r\n        <div class=\"uk-modal-footer uk-text-right\">\r\n          <button class=\"uk-button uk-button-danger uk-modal-close  uk-button-small\" type=\"button\">Cancel</button>\r\n          <button class=\"uk-button uk-button-primary uk-button-small\" [disabled]=\"!newNote.title\"\r\n            (click)=\"saveNote()\">Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"create-folder-modal\" class=\"uk-flex-top\" #createFolderModalRef>\r\n    <div class=\"uk-modal-dialog uk-margin-auto-vertical uk-animation-scale-up\">\r\n      <div class=\"add-note\">\r\n        <div class=\"uk-modal-header\">\r\n          <h2><span uk-icon=\"icon: folder; ratio: 1.4\"></span> New Folder</h2>\r\n        </div>\r\n        <div class=\"uk-modal-body\">\r\n          <div style=\"display: flex; flex-direction: column;\">\r\n            <h3>Type folder name: </h3>\r\n            <input class=\"uk-input uk-form-medium\" #folderInput placeholder=\"folder name\"\r\n              (keyup)=\"folderInput.canSave = folderInput.value && folderInput.value.length > 2\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"uk-modal-footer uk-text-right\">\r\n          <button class=\"uk-button uk-button-danger uk-modal-close  uk-button-small\" type=\"button\">Cancel</button>\r\n          <button class=\"uk-button uk-button-primary  uk-button-small\" [disabled]=\"!folderInput.canSave\"\r\n            (click)=\"saveFolder(folderInput)\">Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","\r\nexport type UIkitElement = object | HTMLElement | string;\r\nexport type UIkitNodes = NodeList | HTMLCollection | UIkitNode;\r\nexport type UIkitNode = Node;\r\n\r\n\r\nexport interface UIkitAccordionOptions {\r\n    active?: number;\r\n    animation?: boolean;\r\n    collapsible?: boolean;\r\n    content?: string;\r\n    duration?: number;\r\n    multiple?: boolean;\r\n    targets?: string;\r\n    toggle?: string;\r\n    transition?: string;\r\n}\r\n\r\nexport interface UIkitAccordionElement {\r\n    toggle(index: string | number | UIkitNode, animate: boolean): void;\r\n}\r\n\r\ntype Accordion = (element: UIkitElement, options?: UIkitAccordionOptions) => UIkitAccordionElement;\r\n\r\nexport interface UIkitAlertOptions {\r\n    animation?: boolean | string;\r\n    duration?: number;\r\n    'sel-close'?: string;\r\n}\r\n\r\nexport interface UIkitAlertElement {\r\n    close(): void;\r\n}\r\n\r\ntype Alert = (element: UIkitElement, options?: UIkitAlertOptions) => UIkitAlertElement;\r\n\r\nexport interface UIkitCoverOptions {\r\n    automute?: boolean;\r\n    width?: number;\r\n    height?: number;\r\n}\r\n\r\ntype Cover = (element: UIkitElement, options?: UIkitCoverOptions) => void;\r\n\r\nexport interface UIkitDropOptions {\r\n    toggle?: string | boolean;\r\n    pos?: string;\r\n    mode?: string;\r\n    'delay-show'?: number;\r\n    'delay-hide'?: number;\r\n    boundary?: string;\r\n    'boundary-align'?: boolean;\r\n    flip?: boolean | string;\r\n    offset?: number;\r\n    animation?: string;\r\n    duration?: number;\r\n}\r\n\r\nexport interface UIkitDropElement {\r\n    show(): void;\r\n    hide(): void;\r\n}\r\n\r\ntype Drop = (element: UIkitElement, options?: UIkitDropOptions) => UIkitDropElement;\r\n\r\nexport interface UIkitDropdownOptions {\r\n    toggle?: string | boolean;\r\n    pos?: string;\r\n    mode?: string;\r\n    'delay-show'?: number;\r\n    'delay-hide'?: number;\r\n    boundary?: string;\r\n    'boundary-align'?: boolean;\r\n    flip?: boolean | string;\r\n    offset?: number;\r\n    animation?: string;\r\n    duration?: number;\r\n}\r\n\r\nexport interface UIkitDropdownElement {\r\n    show(): void;\r\n    hide(): void;\r\n}\r\n\r\ntype Dropdown = (element: UIkitElement, options?: UIkitDropdownOptions) => UIkitDropdownElement;\r\n\r\nexport interface UIkitFormOptions {\r\n    target?: string | boolean;\r\n}\r\n\r\ntype FormCustom = (element: UIkitElement, options?: UIkitFormOptions) => void;\r\n\r\nexport interface UIkitGridOptions {\r\n    margin?: string;\r\n    'first-column'?: string;\r\n    masonry?: boolean;\r\n    parallax?: number;\r\n}\r\n\r\ntype Grid = (element: UIkitElement, options?: UIkitGridOptions) => void;\r\n\r\nexport interface UIkitHeightMatchOptions {\r\n    target?: string;\r\n    row?: boolean;\r\n}\r\n\r\ntype HeightMatch = (element: UIkitElement, options?: UIkitHeightMatchOptions) => void;\r\n\r\nexport interface UIkitIconOptions {\r\n    icon?: string;\r\n    ratio?: number;\r\n}\r\n\r\ntype Icon = (element: UIkitElement, options?: UIkitIconOptions) => {\r\n    svg: Promise<any>;\r\n};\r\n\r\nexport interface UIkitImageOptions {\r\n    dataSrc?: string;\r\n    dataSrcset?: string | boolean;\r\n    sizes?: string | boolean;\r\n    width?: string | boolean;\r\n    height?: string | boolean;\r\n    offsetTop?: string;\r\n    offsetLeft?: string | number;\r\n    target?: string | boolean;\r\n}\r\n\r\ntype Img = (element: UIkitElement, options?: UIkitImageOptions) => void;\r\n\r\nexport interface UIkitLeaderOptions {\r\n    fill?: string;\r\n    media?: number | string;\r\n}\r\n\r\ntype Leader = (element: UIkitElement, options?: UIkitLeaderOptions) => void;\r\n\r\nexport interface UIkitMarginOptions {\r\n    margin?: string;\r\n    'first-column'?: string;\r\n}\r\n\r\ntype Margin = (element: UIkitElement, options?: UIkitMarginOptions) => void;\r\n\r\nexport interface UIkitModalOptions {\r\n    'esc-close'?: boolean;\r\n    'bg-close'?: boolean;\r\n    stack?: boolean;\r\n    container?: string | boolean;\r\n    'cls-page'?: string;\r\n    'cls-panel'?: string;\r\n    'sel-close'?: string;\r\n}\r\n\r\nexport interface UIkitModalElement {\r\n    show(): void;\r\n    hide(): void;\r\n    $el : HTMLElement;\r\n}\r\n\r\nexport enum ModalEvents{\r\n    show = 'show',\r\n    beforeshow= 'beforeshow',\r\n    hidden = 'hidden'\r\n}\r\n\r\nexport interface Modal {\r\n    (element: UIkitElement, options?: UIkitModalOptions): UIkitModalElement;\r\n    alert(message: string, options?: UIkitModalOptions): Promise<void>;\r\n    confirm(message: string, options?: UIkitModalOptions): Promise<void>;\r\n    prompt(content: string, value: string, options?: UIkitModalOptions): Promise<string>;\r\n    dialog(content: string, options?: UIkitModalOptions): Promise<void>;\r\n    labels: {\r\n        ok: string;\r\n        cancel: string;\r\n    };\r\n}\r\n\r\nexport interface UIkitNavOptions {\r\n    targets?: string;\r\n    toggle?: string;\r\n    content?: string;\r\n    collapsible?: boolean;\r\n    multiple?: boolean;\r\n    transition?: string;\r\n    animation?: string;\r\n    duration?: number;\r\n}\r\n\r\nexport interface UIkitNavElement {\r\n    index: string | number | UIkitNode;\r\n    animate: boolean;\r\n}\r\n\r\ntype Nav = (element: UIkitElement, options?: UIkitNavOptions) => UIkitNavElement;\r\n\r\nexport interface UIkitNavbarOptions {\r\n    align?: string;\r\n    mode?: string;\r\n    'delay-show'?: number;\r\n    'delay-hide'?: number;\r\n    boundary?: string;\r\n    'boundary-align'?: boolean;\r\n    offset?: number;\r\n    dropbar?: boolean;\r\n    'dropbar-mode'?: string;\r\n    duration?: number;\r\n}\r\n\r\ntype Navbar = (element: UIkitElement, options?: UIkitNavbarOptions) => void;\r\n\r\nexport interface UIkitOffcanvasOptions {\r\n    mode?: string;\r\n    flip?: boolean;\r\n    overlay?: boolean;\r\n    'esc-close'?: boolean;\r\n    'bg-close'?: boolean;\r\n    container?: string | boolean;\r\n}\r\n\r\nexport interface UIkitOffcanvasElement {\r\n    show(): void;\r\n    hide(): void;\r\n}\r\n\r\ntype Offcanvas = (element: UIkitElement, options?: UIkitOffcanvasOptions) => UIkitOffcanvasElement;\r\n\r\nexport interface UIkitScrollOptions {\r\n    duration?: number;\r\n    offset?: number;\r\n}\r\n\r\nexport interface UIkitScrollElement {\r\n    scrollTo(el: string | UIkitNode): void;\r\n}\r\n\r\ntype Scroll = (element: UIkitElement, options?: UIkitScrollOptions) => UIkitScrollElement;\r\n\r\nexport interface UIkitScrollspyOptions {\r\n    cls?: string;\r\n    hidden?: boolean;\r\n    'offset-top'?: number;\r\n    'offset-left'?: number;\r\n    repeat?: boolean;\r\n    delay?: number;\r\n}\r\n\r\nexport interface UIkitScrollspyNavOptions {\r\n    cls?: string;\r\n    closest?: string;\r\n    scroll?: boolean;\r\n    overflow?: boolean;\r\n    offset?: number;\r\n}\r\n\r\ntype Scrollspy = (element: UIkitElement, options?: UIkitScrollspyOptions) => void;\r\ntype ScrollspyNav = (element: UIkitElement, options?: UIkitScrollspyNavOptions) => void;\r\n\r\nexport interface UIkitStickyOptions {\r\n    top?: number | string;\r\n    bottom?: boolean | string;\r\n    offset?: number | string;\r\n    animation?: string | boolean;\r\n    'cls-active'?: string;\r\n    'cls-inactive'?: string;\r\n    'width-element'?: string | boolean;\r\n    'show-on-up'?: boolean;\r\n    media?: number | string | boolean;\r\n    'target-offset'?: boolean | number;\r\n}\r\n\r\ntype Sticky = (element: UIkitElement, options?: UIkitStickyOptions) => void;\r\n\r\nexport interface UIkitSvgOptions {\r\n    src?: string;\r\n    'stroke-animation'?: boolean;\r\n}\r\n\r\ntype Svg = (element: UIkitElement, options?: UIkitSvgOptions) => {\r\n    svg: Promise<any>;\r\n};\r\n\r\nexport interface UIkitSwiterOptions {\r\n    connect?: string;\r\n    toggle?: string;\r\n    active?: number;\r\n    animation?: string;\r\n    duration?: number;\r\n    swiping?: boolean;\r\n}\r\n\r\nexport interface UIkitSwitcherElement {\r\n    show(index: string | number | UIkitNode): void;\r\n}\r\n\r\ntype Switcher = (element: UIkitElement, options?: UIkitSwiterOptions) => UIkitSwitcherElement;\r\n\r\nexport interface UIkitTabOptions {\r\n    connect?: string;\r\n    toggle?: string;\r\n    active?: number;\r\n    animation?: string;\r\n    duration?: number;\r\n    swiping?: boolean;\r\n    media?: number | string;\r\n}\r\n\r\nexport interface UIkitTabElement {\r\n    show(index: string | number | UIkitNode): void;\r\n}\r\n\r\ntype Tab = (element: UIkitElement, options?: UIkitTabOptions) => UIkitTabElement;\r\n\r\nexport interface UIkitToggleOptions {\r\n    target?: string;\r\n    mode?: string;\r\n    cls?: string;\r\n    media?: number | string;\r\n    animation?: string;\r\n    duration?: number;\r\n    queued?: boolean;\r\n}\r\n\r\nexport interface UIkitToggleElement {\r\n    toggle(): void;\r\n}\r\n\r\ntype Toggle = (element: UIkitElement, options?: UIkitToggleOptions) => UIkitToggleElement;\r\n\r\nexport interface UIkitVideoOptions {\r\n    autoplay?: boolean | string;\r\n    automute?: boolean;\r\n}\r\n\r\ntype Video = (element: UIkitElement, options?: UIkitVideoOptions) => void;\r\n\r\n// Components\r\n\r\nexport interface UIkitCountdownOptions {\r\n    date?: string | boolean;\r\n}\r\n\r\nexport interface UIkitCountdownElement {\r\n    start(): void;\r\n    stop(): void;\r\n}\r\n\r\ntype Countdown = (element: UIkitElement, options?: UIkitCountdownOptions) => UIkitCountdownElement;\r\n\r\nexport interface UIkitFilterOptions {\r\n    target?: string;\r\n    selActive?: string | boolean;\r\n}\r\n\r\ntype Filter = (element: UIkitElement, options?: UIkitFilterOptions) => void;\r\n\r\nexport interface UIkitLightboxPanelOptions {\r\n    animation?: string;\r\n    autoplay?: boolean;\r\n    'autoplay-interval'?: number;\r\n    'pause-on-hover'?: boolean;\r\n    'video-autoplay'?: boolean;\r\n    index?: number;\r\n    velocity?: number;\r\n    preload?: number;\r\n    items?: object[];\r\n    template?: string;\r\n    'delay-controls'?: number;\r\n}\r\n\r\nexport interface UIkitLightboxPanelElement {\r\n    show(index: number): void;\r\n    hide(): void;\r\n    startAutoplay(): void;\r\n    stopAutoplay(): void;\r\n}\r\n\r\nexport interface LightboxPanel {\r\n    (optionsOrElement: UIkitLightboxPanelOptions | UIkitElement): UIkitLightboxPanelElement;\r\n}\r\n\r\nexport interface UIkitLightboxOptions {\r\n    animation?: string;\r\n    autoplay?: number;\r\n    'autoplay-interval'?: number;\r\n    'pause-on-hover'?: boolean;\r\n    'video-autoplay'?: boolean;\r\n    index?: string;\r\n    toggle?: string;\r\n}\r\n\r\nexport interface UIkitLightboxElement {\r\n    show(index: number): void;\r\n    hide(): void;\r\n}\r\n\r\ntype Lightbox = (element: UIkitElement, options?: UIkitLightboxOptions) => UIkitLightboxElement;\r\nexport interface UIkitNotificationOptions {\r\n    message?: string;\r\n    status?: 'primary' | 'success' | 'warning' | 'danger';\r\n    timeout?: number;\r\n    group?: string;\r\n    pos?: 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\r\n}\r\n\r\nexport interface UIkitNotificationElement {\r\n    close(immediate: boolean): void;\r\n}\r\n\r\nexport interface Notification {\r\n    (options: UIkitNotificationOptions): UIkitNotificationElement;\r\n    (message: string, optionsOrStatus?: UIkitNotificationOptions | string): UIkitNotificationElement;\r\n}\r\n\r\nexport interface UIkitParallaxOptions {\r\n    easing?: number;\r\n    target?: string;\r\n    viewport?: number;\r\n    media?: number | string;\r\n}\r\n\r\ntype Parallax = (element: UIkitElement, options?: UIkitParallaxOptions) => void;\r\n\r\nexport interface UIkitSliderOptions {\r\n    autoplay?: boolean;\r\n    'autoplay-interval'?: number;\r\n    center?: boolean;\r\n    draggable?: boolean;\r\n    easing?: string;\r\n    finite?: boolean;\r\n    index?: number;\r\n    'pause-on-hover'?: boolean;\r\n    sets?: boolean;\r\n    velocity?: number;\r\n}\r\n\r\nexport interface UIkitSliderElement {\r\n    show(index: number): void;\r\n    startAutoplay(): void;\r\n    stopAutoplay(): void;\r\n}\r\n\r\ntype Slider = (element: UIkitElement, options?: UIkitSliderOptions) => UIkitSliderElement;\r\n\r\nexport interface UIkitSlideshowOptions {\r\n    animation?: string;\r\n    autoplay?: boolean;\r\n    'autoplay-interval'?: number;\r\n    draggable?: boolean;\r\n    easing?: string;\r\n    finite?: boolean;\r\n    'pause-on-hover'?: boolean;\r\n    index?: number;\r\n    velocity?: number;\r\n    ratio?: string | number;\r\n    'min-height'?: boolean | number;\r\n    'max-height'?: boolean | number;\r\n}\r\n\r\nexport interface UIkitSlidershowElement {\r\n    show(index: number): void;\r\n    startAutoplay(): void;\r\n    stopAutoplay(): void;\r\n}\r\n\r\ntype Slidershow = (element: UIkitElement, options?: UIkitSlideshowOptions) => UIkitSlidershowElement;\r\n\r\nexport interface UIkitSortableOptions {\r\n    group?: string;\r\n    animation?: number;\r\n    threshold?: number;\r\n    'cls-item'?: string;\r\n    'cls-placeholder'?: string;\r\n    'cls-drag'?: string;\r\n    'cls-drag-state'?: string;\r\n    'cls-base'?: string;\r\n    'cls-no-drag'?: string;\r\n    'cls-empty'?: string;\r\n    'cls-custom': string;\r\n    handle?: string;\r\n}\r\n\r\ntype Sortable = (element: UIkitElement, options?: UIkitSortableOptions) => void;\r\n\r\nexport interface UIkitTooltipOptions {\r\n    title?: string;\r\n    pos?: string;\r\n    offset?: number | boolean;\r\n    animation?: string;\r\n    duration?: number;\r\n    delay?: number;\r\n    cls?: string;\r\n}\r\n\r\nexport interface UIkitTooltipElement {\r\n    show(): void;\r\n    hide(): void;\r\n}\r\n\r\ntype Tooltip = (element: UIkitElement, options?: UIkitTooltipOptions) => UIkitTooltipElement;\r\n\r\nexport interface UIkitUploadOptions {\r\n    url?: string;\r\n    multiple?: boolean;\r\n    name?: string;\r\n    params?: object;\r\n    allow?: string | boolean;\r\n    mime?: string | boolean;\r\n    concurrent?: number;\r\n    type?: string;\r\n    method?: string;\r\n    'msg-invalid-mime'?: string;\r\n    'msg-invalid-name'?: string;\r\n    'cls-dragover'?: string;\r\n    abort?: object;\r\n    'before-all'?: object;\r\n    'before-send'?: object;\r\n    complete?: object;\r\n    'complete-all'?: object;\r\n    error?: object;\r\n    load?: object;\r\n    'load-end'?: object;\r\n    'load-start'?: object;\r\n    progress?: object;\r\n    fail?: object;\r\n}\r\n\r\ntype Upload = (element: UIkitElement, options?: UIkitUploadOptions) => void;\r\nexport interface UIkit {\r\n    util: any;\r\n    component: any;\r\n    data: string;\r\n    prefix: string;\r\n    options: any;\r\n    version: string;\r\n    use: any;\r\n    mixin: any;\r\n    extend: any;\r\n    update: any;\r\n\r\n    // Core\r\n    accordion: Accordion;\r\n    alert: Alert;\r\n    cover: Cover;\r\n    drop: Drop;\r\n    dropdown: Dropdown;\r\n    formCustom: FormCustom;\r\n    grid: Grid;\r\n    heightMatch: HeightMatch;\r\n    icon: Icon;\r\n    image: Img;\r\n    leader: Leader;\r\n    margin: Margin;\r\n    modal: Modal;\r\n    nav: Nav;\r\n    navbar: Navbar;\r\n    offcanvas: Offcanvas;\r\n    scroll: Scroll;\r\n    scrollspy: Scrollspy;\r\n    scrollspyNav: ScrollspyNav;\r\n    sticky: Sticky;\r\n    svg: Svg;\r\n    switcher: Switcher;\r\n    tab: Tab;\r\n    toggle: Toggle;\r\n    video: Video;\r\n\r\n    // Components\r\n    notification: Notification;\r\n    countdown: Countdown;\r\n    filter: Filter;\r\n    lightbox: Lightbox;\r\n    lightboxPanel: LightboxPanel;\r\n    parallax: Parallax;\r\n    slider: Slider;\r\n    slideshow: Slidershow;\r\n    sortable: Sortable;\r\n    tooltip: Tooltip;\r\n    upload: Upload;\r\n}\r\n\r\n","import { CrossoverModel, crossoverModel } from './crossover-framework';\r\n\r\n@crossoverModel\r\nexport class DisplayInfo extends CrossoverModel {\r\n  width: number;\r\n  height: number;\r\n}\r\n@crossoverModel\r\nexport class AppConfig extends CrossoverModel {\r\n  minimized?: boolean;\r\n  width?: number;\r\n}\r\n@crossoverModel\r\nexport class GenericData extends CrossoverModel {\r\n  storeName: string;\r\n  data?: any;\r\n  action: 'save' | 'get'\r\n}\r\n","import { Directive, ElementRef, Input, Output, EventEmitter, AfterViewInit, ComponentFactoryResolver, ViewContainerRef, ComponentRef } from '@angular/core';\r\nimport { ConfirmationOverlayComponent } from '../components/confirmation-overlay/confirmation-overlay.component';\r\n\r\n@Directive({ selector: '[confirm-delete]' })\r\nexport class ConfirmDeleteDirective {\r\n\r\n  @Output() onConfirm = new EventEmitter<any>();\r\n  @Output() onCancel = new EventEmitter<any>();\r\n\r\n  private nativeElement: HTMLElement;\r\n  private confirmationOverlay: ComponentRef<ConfirmationOverlayComponent>;\r\n\r\n  constructor(elRef: ElementRef, private componentFactoryResolver: ComponentFactoryResolver, public viewContainerRef: ViewContainerRef) {\r\n    this.nativeElement = elRef.nativeElement as HTMLElement;\r\n    this.nativeElement[\"confirmDelete\"] = () => this.confirmDelete();\r\n  }\r\n\r\n  private confirmDelete() {\r\n\r\n    this.nativeElement.style.filter = 'blur(2px)';\r\n    this.nativeElement.parentElement.style.position = 'relative';\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(ConfirmationOverlayComponent);\r\n    const componentRef = this.viewContainerRef.createComponent(componentFactory);\r\n    componentRef.instance.confirmAction = () => this.handleAction(true);\r\n    componentRef.instance.cancelAction = () => this.handleAction(false);\r\n    this.confirmationOverlay = componentRef;\r\n\r\n    var confirmationElement = componentRef.location.nativeElement;\r\n    confirmationElement.style.left = this.nativeElement.offsetLeft - 1 + 'px';\r\n    confirmationElement.style.top = this.nativeElement.offsetTop - 1 + 'px';\r\n    confirmationElement.style.width = this.nativeElement.clientWidth + 2 + 'px';\r\n    confirmationElement.style.height = this.nativeElement.clientHeight + 2 + 'px';\r\n  }\r\n\r\n  private handleAction(confirm: boolean): void {\r\n    this.viewContainerRef.remove();\r\n    this.nativeElement.style.filter = '';\r\n    this.nativeElement.parentElement.style.position = 'relative';\r\n    if (confirm && this.onConfirm.observers.length) {\r\n      this.onConfirm.emit();\r\n    }\r\n    if (!confirm && this.onCancel.observers.length) {\r\n      this.onCancel.emit();\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n@Directive({\r\n  selector: '[ngInit]'\r\n})\r\nexport class NgInitDirective {\r\n  @Output('ngInit') initEvent: EventEmitter<HTMLElement> = new EventEmitter();\r\n  constructor(private elRef: ElementRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initEvent.emit(this.elRef.nativeElement);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class MainRoutingModule { }\n","export function crossoverModel(typeDef: any) {\r\n    typeDef.internal_type_name = typeDef.name;\r\n}\r\n\r\nexport function crossoverChannel(typeDef: any) {\r\n    typeDef.channelName = typeDef.name;\r\n    console.log(typeDef);\r\n    typeDef.with = mt => withType(typeDef, mt);\r\n}\r\n\r\nfunction withType(typeDef: any, modelTypeDef: any) {\r\n    var crossOverChannel = new typeDef();\r\n    console.log(crossOverChannel);\r\n    crossOverChannel.channelName = typeDef.name;\r\n    crossOverChannel.eventName = `${crossOverChannel.channelName}-${modelTypeDef.internal_type_name}`;\r\n    return crossOverChannel;\r\n}\r\n\r\nexport abstract class CrossoverChannel {\r\n    public static with: <TModel extends CrossoverModel>(modelType: TModel) => CrossoverChannel;\r\n    public static channelName: string;\r\n    public channelName: string;\r\n    public eventName: string;\r\n}\r\n\r\nexport abstract class CrossoverModel {\r\n    public static internal_type_name: string;\r\n}\r\n","// it resolves this issue of repetitive code or multiple properties for a ui component (elementRef && components itself create from the reference)\r\n// async ngAfterViewInit(): Promise < void> {\r\n//     var elementRef = (this.addNotesModal as any) as ElementRef;\r\n//     this.addNotesModal = uikit.modal(elementRef.nativeElement);\r\n// }\r\nimport { UIkitElement } from './types/uikit.types';\r\nexport declare type UIkitComponent = UIkitElement;\r\nexport function UIkitComponent(uikitConstructor: any, options?: any) {\r\n    return function (target: any, key: string) {\r\n        var newVal;\r\n        Object.defineProperty(target, key, {\r\n            get: () => newVal,\r\n            set: (value) => newVal = options? uikitConstructor(value.nativeElement, options) : uikitConstructor(value.nativeElement)\r\n        });\r\n    }\r\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MainRoutingModule } from './main-routing.module';\nimport { RootComponent } from './root/root.component';\nimport { ConfirmDeleteDirective, NgInitDirective } from './shared/directives/directives';\nimport { ConfirmationOverlayComponent } from './shared/components/confirmation-overlay/confirmation-overlay.component';\n\n@NgModule({\n  declarations: [\n    RootComponent,\n    ConfirmDeleteDirective,\n    NgInitDirective,\n    ConfirmationOverlayComponent\n  ],\n  imports: [\n    BrowserModule,\n    MainRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [RootComponent]\n})\n\nexport class MainModule { }\n","import { Note, NoteLine, NoteStates } from 'app/models/models';\r\n\r\nexport class NoteActions {\r\n\r\n  constructor(private note: Note, private onAction: () => void) {\r\n  }\r\n\r\n  public completeLine(line: NoteLine) {\r\n    line.state = NoteStates.completed;\r\n    this.onAction();\r\n  }\r\n\r\n  public cancelLine(line: NoteLine) {\r\n    line.state = NoteStates.canceled;\r\n    this.onAction();\r\n  }\r\n\r\n  public inProgressLine(line: NoteLine) {\r\n    line.state = NoteStates.inProgress;\r\n    this.onAction();\r\n  }\r\n\r\n  public createNewLine() {\r\n    this.note.lines.push({});\r\n    this.note.state = NoteStates.neutral;\r\n    this.onAction();\r\n  };\r\n\r\n\r\n}\r\n","import { IpcRendererEvent } from 'electron';\r\nimport { CrossoverChannel, CrossoverModel } from './crossover-framework';\r\n\r\nconst electron: Electron.RendererInterface = window.require ? window.require('electron') : undefined;\r\nconst electronNotPrezent = e => console.error('electron not available')\r\nexport class Crossover {\r\n\r\n  public static electron: Electron.RendererInterface = electron || { ipcRenderer: { send: electronNotPrezent, on: electronNotPrezent, removeListener: electronNotPrezent, invoke: electronNotPrezent } } as any as Electron.RendererInterface;\r\n  public static isElectronRunning: boolean = !!electron;\r\n\r\n  public static send<TModel extends CrossoverModel>(channel: (new () => CrossoverChannel) | CrossoverChannel, model: TModel) {\r\n    let eventName = channel instanceof CrossoverChannel ? channel.eventName : (channel as any).channelName;\r\n    Crossover.electron.ipcRenderer.send(eventName, model);\r\n  }\r\n\r\n  public static subscribe(channel: (new () => CrossoverChannel) | CrossoverChannel, listener: <T>(event: IpcRendererEvent, model: T) => void) {\r\n    let eventName = channel instanceof CrossoverChannel ? channel.eventName : (channel as any).channelName;\r\n    Crossover.electron.ipcRenderer.on(eventName, listener);\r\n  }\r\n\r\n  public static unsubscribe<TChannel extends CrossoverChannel>(channel: (new () => TChannel) | TChannel, listener: (...args: any[]) => void) {\r\n    let eventName = channel instanceof CrossoverChannel ? channel.eventName : (channel as any).channelName;\r\n    Crossover.electron.ipcRenderer.removeListener(eventName, listener);\r\n  }\r\n\r\n  public static async get<T>(channel: (new () => CrossoverChannel) | CrossoverChannel, model?: CrossoverModel): Promise<T> {\r\n    let eventName = channel instanceof CrossoverChannel ? channel.eventName : (channel as any).channelName;\r\n    var result = await Crossover.electron.ipcRenderer.invoke(eventName, model);\r\n    return result;\r\n  }\r\n}\r\n","import { NoteActions } from 'app/root/note-actions';\r\n\r\nexport class Folder {\r\n  name: string;\r\n  notes: Note[];\r\n  isDefault?: boolean;\r\n  selected?: boolean;\r\n}\r\n\r\nexport class Note {\r\n  title?: string;\r\n  lines?: NoteLine[];\r\n  content?: string;\r\n  date?: Date;\r\n  target?: Date;\r\n  state?: NoteStates;\r\n\r\n  allStates?: typeof NoteStates;\r\n  actions?: NoteActions;\r\n}\r\n\r\nexport interface NoteLine {\r\n  content?: string;\r\n  done?: boolean;\r\n  date?: Date;\r\n  state?: NoteStates;\r\n}\r\n\r\n\r\nexport enum NoteStates {\r\n  completed = 'completed',\r\n  inProgress = 'inProgress',\r\n  canceled = 'canceled',\r\n  important = 'important',\r\n  neutral = 'neutral'\r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}